//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace App15.ServiceReference2 {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AirportIdentifierType", Namespace="http://schemas.datacontract.org/2004/07/WorkBridge.Modules.AMS.AMSIntegrationWebA" +
        "PI.Srv")]
    public enum AirportIdentifierType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IATACode = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICAOCode = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlightId", Namespace="http://schemas.datacontract.org/2004/07/WorkBridge.Modules.AMS.AMSIntegrationAPI." +
        "Mod.Intf.DataTypes")]
    public partial class FlightId : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool _hasAirportCodesField;
        
        private bool _hasFlightDesignatorField;
        
        private bool _hasScheduledTimeField;
        
        private System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.LookupCode> airlineDesignatorFieldField;
        
        private System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.LookupCode> airportCodeFieldField;
        
        private App15.ServiceReference2.FlightKind flightKindFieldField;
        
        private string flightNumberFieldField;
        
        private System.DateTime scheduledDateFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool _hasAirportCodes {
            get {
                return this._hasAirportCodesField;
            }
            set {
                if ((this._hasAirportCodesField.Equals(value) != true)) {
                    this._hasAirportCodesField = value;
                    this.RaisePropertyChanged("_hasAirportCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool _hasFlightDesignator {
            get {
                return this._hasFlightDesignatorField;
            }
            set {
                if ((this._hasFlightDesignatorField.Equals(value) != true)) {
                    this._hasFlightDesignatorField = value;
                    this.RaisePropertyChanged("_hasFlightDesignator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool _hasScheduledTime {
            get {
                return this._hasScheduledTimeField;
            }
            set {
                if ((this._hasScheduledTimeField.Equals(value) != true)) {
                    this._hasScheduledTimeField = value;
                    this.RaisePropertyChanged("_hasScheduledTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.LookupCode> airlineDesignatorField {
            get {
                return this.airlineDesignatorFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.airlineDesignatorFieldField, value) != true)) {
                    this.airlineDesignatorFieldField = value;
                    this.RaisePropertyChanged("airlineDesignatorField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.LookupCode> airportCodeField {
            get {
                return this.airportCodeFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.airportCodeFieldField, value) != true)) {
                    this.airportCodeFieldField = value;
                    this.RaisePropertyChanged("airportCodeField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public App15.ServiceReference2.FlightKind flightKindField {
            get {
                return this.flightKindFieldField;
            }
            set {
                if ((this.flightKindFieldField.Equals(value) != true)) {
                    this.flightKindFieldField = value;
                    this.RaisePropertyChanged("flightKindField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string flightNumberField {
            get {
                return this.flightNumberFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.flightNumberFieldField, value) != true)) {
                    this.flightNumberFieldField = value;
                    this.RaisePropertyChanged("flightNumberField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime scheduledDateField {
            get {
                return this.scheduledDateFieldField;
            }
            set {
                if ((this.scheduledDateFieldField.Equals(value) != true)) {
                    this.scheduledDateFieldField = value;
                    this.RaisePropertyChanged("scheduledDateField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LookupCode", Namespace="http://schemas.datacontract.org/2004/07/WorkBridge.Modules.AMS.AMSIntegrationAPI." +
        "Mod.Intf.DataTypes")]
    public partial class LookupCode : object, System.ComponentModel.INotifyPropertyChanged {
        
        private App15.ServiceReference2.CodeContext codeContextFieldField;
        
        private string valueFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public App15.ServiceReference2.CodeContext codeContextField {
            get {
                return this.codeContextFieldField;
            }
            set {
                if ((this.codeContextFieldField.Equals(value) != true)) {
                    this.codeContextFieldField = value;
                    this.RaisePropertyChanged("codeContextField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string valueField {
            get {
                return this.valueFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.valueFieldField, value) != true)) {
                    this.valueFieldField = value;
                    this.RaisePropertyChanged("valueField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlightKind", Namespace="http://schemas.datacontract.org/2004/07/WorkBridge.Modules.AMS.AMSIntegrationAPI." +
        "Mod.Intf.DataTypes")]
    public enum FlightKind : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Arrival = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Departure = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodeContext", Namespace="http://schemas.datacontract.org/2004/07/WorkBridge.Modules.AMS.AMSIntegrationAPI." +
        "Mod.Intf.DataTypes")]
    public enum CodeContext : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICAO = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IATA = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyValue", Namespace="http://schemas.datacontract.org/2004/07/WorkBridge.Modules.AMS.AMSIntegrationAPI." +
        "Mod.Intf.DataTypes")]
    public partial class PropertyValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private App15.ServiceReference2.CodeContext codeContextFieldField;
        
        private bool codeContextFieldSpecifiedField;
        
        private string propertyNameFieldField;
        
        private string valueFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public App15.ServiceReference2.CodeContext codeContextField {
            get {
                return this.codeContextFieldField;
            }
            set {
                if ((this.codeContextFieldField.Equals(value) != true)) {
                    this.codeContextFieldField = value;
                    this.RaisePropertyChanged("codeContextField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool codeContextFieldSpecified {
            get {
                return this.codeContextFieldSpecifiedField;
            }
            set {
                if ((this.codeContextFieldSpecifiedField.Equals(value) != true)) {
                    this.codeContextFieldSpecifiedField = value;
                    this.RaisePropertyChanged("codeContextFieldSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string propertyNameField {
            get {
                return this.propertyNameFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.propertyNameFieldField, value) != true)) {
                    this.propertyNameFieldField = value;
                    this.RaisePropertyChanged("propertyNameField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string valueField {
            get {
                return this.valueFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.valueFieldField, value) != true)) {
                    this.valueFieldField = value;
                    this.RaisePropertyChanged("valueField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlightUpdateInformation", Namespace="http://schemas.datacontract.org/2004/07/WorkBridge.Modules.AMS.AMSIntegrationAPI." +
        "Mod.Intf.DataTypes")]
    public partial class FlightUpdateInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.ActivityUpdate> activityUpdateFieldField;
        
        private System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.EventUpdate> eventUpdateFieldField;
        
        private System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.TableValueUpdate> tableValueUpdateFieldField;
        
        private System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updateFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.ActivityUpdate> activityUpdateField {
            get {
                return this.activityUpdateFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.activityUpdateFieldField, value) != true)) {
                    this.activityUpdateFieldField = value;
                    this.RaisePropertyChanged("activityUpdateField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.EventUpdate> eventUpdateField {
            get {
                return this.eventUpdateFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.eventUpdateFieldField, value) != true)) {
                    this.eventUpdateFieldField = value;
                    this.RaisePropertyChanged("eventUpdateField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.TableValueUpdate> tableValueUpdateField {
            get {
                return this.tableValueUpdateFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.tableValueUpdateFieldField, value) != true)) {
                    this.tableValueUpdateFieldField = value;
                    this.RaisePropertyChanged("tableValueUpdateField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updateField {
            get {
                return this.updateFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.updateFieldField, value) != true)) {
                    this.updateFieldField = value;
                    this.RaisePropertyChanged("updateField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityUpdate", Namespace="http://schemas.datacontract.org/2004/07/WorkBridge.Modules.AMS.AMSIntegrationAPI." +
        "Mod.Intf.DataTypes")]
    public partial class ActivityUpdate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeFieldField;
        
        private System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updateFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string codeField {
            get {
                return this.codeFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.codeFieldField, value) != true)) {
                    this.codeFieldField = value;
                    this.RaisePropertyChanged("codeField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updateField {
            get {
                return this.updateFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.updateFieldField, value) != true)) {
                    this.updateFieldField = value;
                    this.RaisePropertyChanged("updateField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventUpdate", Namespace="http://schemas.datacontract.org/2004/07/WorkBridge.Modules.AMS.AMSIntegrationAPI." +
        "Mod.Intf.DataTypes")]
    public partial class EventUpdate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeFieldField;
        
        private System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updateFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string codeField {
            get {
                return this.codeFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.codeFieldField, value) != true)) {
                    this.codeFieldField = value;
                    this.RaisePropertyChanged("codeField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updateField {
            get {
                return this.updateFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.updateFieldField, value) != true)) {
                    this.updateFieldField = value;
                    this.RaisePropertyChanged("updateField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TableValueUpdate", Namespace="http://schemas.datacontract.org/2004/07/WorkBridge.Modules.AMS.AMSIntegrationAPI." +
        "Mod.Intf.DataTypes")]
    public partial class TableValueUpdate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string propertyNameFieldField;
        
        private System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.TableRow> rowFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string propertyNameField {
            get {
                return this.propertyNameFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.propertyNameFieldField, value) != true)) {
                    this.propertyNameFieldField = value;
                    this.RaisePropertyChanged("propertyNameField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.TableRow> rowField {
            get {
                return this.rowFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.rowFieldField, value) != true)) {
                    this.rowFieldField = value;
                    this.RaisePropertyChanged("rowField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TableRow", Namespace="http://schemas.datacontract.org/2004/07/WorkBridge.Modules.AMS.AMSIntegrationAPI." +
        "Mod.Intf.DataTypes")]
    public partial class TableRow : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string propertyNameFieldField;
        
        private System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> valueFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string propertyNameField {
            get {
                return this.propertyNameFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.propertyNameFieldField, value) != true)) {
                    this.propertyNameFieldField = value;
                    this.RaisePropertyChanged("propertyNameField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> valueField {
            get {
                return this.valueFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.valueFieldField, value) != true)) {
                    this.valueFieldField = value;
                    this.RaisePropertyChanged("valueField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SlotRequestIdentifier", Namespace="http://schemas.datacontract.org/2004/07/WorkBridge.Modules.AMS.AMSIntegrationAPI." +
        "Mod.Intf.DataTypes")]
    public partial class SlotRequestIdentifier : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string slotRequestUniqueIdFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string slotRequestUniqueIdField {
            get {
                return this.slotRequestUniqueIdFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.slotRequestUniqueIdFieldField, value) != true)) {
                    this.slotRequestUniqueIdFieldField = value;
                    this.RaisePropertyChanged("slotRequestUniqueIdField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.sita.aero/ams6-xml-api-webservice", ConfigurationName="ServiceReference2.IAMSIntegrationService")]
    public interface IAMSIntegrationService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetFlights", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetFlightsRes" +
            "ponse")]
        System.IAsyncResult BeginGetFlights(System.DateTime from, System.DateTime to, string airport, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetFlights(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetMovementsO" +
            "verlappingWithPeriod", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetMovementsO" +
            "verlappingWithPeriodResponse")]
        System.IAsyncResult BeginGetMovementsOverlappingWithPeriod(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetMovementsOverlappingWithPeriod(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAirports", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAirportsRe" +
            "sponse")]
        System.IAsyncResult BeginGetAirports(System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetAirports(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAircraft", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAircraftRe" +
            "sponse")]
        System.IAsyncResult BeginGetAircraft(System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetAircraft(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAircraftTy" +
            "pes", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAircraftTy" +
            "pesResponse")]
        System.IAsyncResult BeginGetAircraftTypes(System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetAircraftTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAirlines", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAirlinesRe" +
            "sponse")]
        System.IAsyncResult BeginGetAirlines(System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetAirlines(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetCustomsTyp" +
            "es", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetCustomsTyp" +
            "esResponse")]
        System.IAsyncResult BeginGetCustomsTypes(System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetCustomsTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetRoutes", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetRoutesResp" +
            "onse")]
        System.IAsyncResult BeginGetRoutes(System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetRoutes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAreas", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAreasRespo" +
            "nse")]
        System.IAsyncResult BeginGetAreas(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetAreas(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetStands", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetStandsResp" +
            "onse")]
        System.IAsyncResult BeginGetStands(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetStands(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetCarousels", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetCarouselsR" +
            "esponse")]
        System.IAsyncResult BeginGetCarousels(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetCarousels(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetCheckIns", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetCheckInsRe" +
            "sponse")]
        System.IAsyncResult BeginGetCheckIns(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetCheckIns(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetChutes", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetChutesResp" +
            "onse")]
        System.IAsyncResult BeginGetChutes(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetChutes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetGates", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetGatesRespo" +
            "nse")]
        System.IAsyncResult BeginGetGates(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetGates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetLounges", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetLoungesRes" +
            "ponse")]
        System.IAsyncResult BeginGetLounges(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetLounges(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAircraftCu" +
            "stomFields", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAircraftCu" +
            "stomFieldsResponse")]
        System.IAsyncResult BeginGetAircraftCustomFields(System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetAircraftCustomFields(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAircraftTy" +
            "peCustomFields", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAircraftTy" +
            "peCustomFieldsResponse")]
        System.IAsyncResult BeginGetAircraftTypeCustomFields(System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetAircraftTypeCustomFields(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAirlineCus" +
            "tomFields", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAirlineCus" +
            "tomFieldsResponse")]
        System.IAsyncResult BeginGetAirlineCustomFields(System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetAirlineCustomFields(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAirportCus" +
            "tomFields", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetAirportCus" +
            "tomFieldsResponse")]
        System.IAsyncResult BeginGetAirportCustomFields(System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetAirportCustomFields(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetRouteCusto" +
            "mFields", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetRouteCusto" +
            "mFieldsResponse")]
        System.IAsyncResult BeginGetRouteCustomFields(System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetRouteCustomFields(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetArrivalFli" +
            "ghtCustomFields", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetArrivalFli" +
            "ghtCustomFieldsResponse")]
        System.IAsyncResult BeginGetArrivalFlightCustomFields(System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetArrivalFlightCustomFields(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetDepartureF" +
            "lightCustomFields", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetDepartureF" +
            "lightCustomFieldsResponse")]
        System.IAsyncResult BeginGetDepartureFlightCustomFields(System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetDepartureFlightCustomFields(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetMovementCu" +
            "stomFields", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetMovementCu" +
            "stomFieldsResponse")]
        System.IAsyncResult BeginGetMovementCustomFields(System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetMovementCustomFields(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetFlight", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetFlightResp" +
            "onse")]
        System.IAsyncResult BeginGetFlight(App15.ServiceReference2.FlightId flightId, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetFlight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetCommonChec" +
            "kInAllocationShapes", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetCommonChec" +
            "kInAllocationShapesResponse")]
        System.IAsyncResult BeginGetCommonCheckInAllocationShapes(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetCommonCheckInAllocationShapes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/CreateFlight", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/CreateFlightR" +
            "esponse")]
        System.IAsyncResult BeginCreateFlight(App15.ServiceReference2.FlightId flightIdentifier, System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updates, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndCreateFlight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/CreateFlightE" +
            "xtended", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/CreateFlightE" +
            "xtendedResponse")]
        System.IAsyncResult BeginCreateFlightExtended(App15.ServiceReference2.FlightId flightIdentifier, App15.ServiceReference2.FlightUpdateInformation updates, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndCreateFlightExtended(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/DeleteFlight", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/DeleteFlightR" +
            "esponse")]
        System.IAsyncResult BeginDeleteFlight(App15.ServiceReference2.FlightId flightIdentifier, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndDeleteFlight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/UpdateFlight", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/UpdateFlightR" +
            "esponse")]
        System.IAsyncResult BeginUpdateFlight(App15.ServiceReference2.FlightId flightIdentifier, System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updates, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndUpdateFlight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/UpdateFlightE" +
            "xtended", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/UpdateFlightE" +
            "xtendedResponse")]
        System.IAsyncResult BeginUpdateFlightExtended(App15.ServiceReference2.FlightId flightIdentifier, App15.ServiceReference2.FlightUpdateInformation updates, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndUpdateFlightExtended(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetStandDowng" +
            "rades", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetStandDowng" +
            "radesResponse")]
        System.IAsyncResult BeginGetStandDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetStandDowngrades(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetGateDowngr" +
            "ades", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetGateDowngr" +
            "adesResponse")]
        System.IAsyncResult BeginGetGateDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetGateDowngrades(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetChuteDowng" +
            "rades", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetChuteDowng" +
            "radesResponse")]
        System.IAsyncResult BeginGetChuteDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetChuteDowngrades(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetCheckInDow" +
            "ngrades", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetCheckInDow" +
            "ngradesResponse")]
        System.IAsyncResult BeginGetCheckInDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetCheckInDowngrades(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetLoungeDown" +
            "grades", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetLoungeDown" +
            "gradesResponse")]
        System.IAsyncResult BeginGetLoungeDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetLoungeDowngrades(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetCarouselDo" +
            "wngrades", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetCarouselDo" +
            "wngradesResponse")]
        System.IAsyncResult BeginGetCarouselDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetCarouselDowngrades(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetSlotReques" +
            "ts", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetSlotReques" +
            "tsResponse")]
        System.IAsyncResult BeginGetSlotRequests(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetSlotRequests(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetSlotReques" +
            "tsForAirline", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetSlotReques" +
            "tsForAirlineResponse")]
        System.IAsyncResult BeginGetSlotRequestsForAirline(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, string airlineCode, App15.ServiceReference2.CodeContext airlineIdentifierType, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetSlotRequestsForAirline(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/CreateSlotReq" +
            "uest", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/CreateSlotReq" +
            "uestResponse")]
        System.IAsyncResult BeginCreateSlotRequest(System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> values, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndCreateSlotRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/UpdateSlotReq" +
            "uest", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/UpdateSlotReq" +
            "uestResponse")]
        System.IAsyncResult BeginUpdateSlotRequest(App15.ServiceReference2.SlotRequestIdentifier slotRequestId, System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> values, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndUpdateSlotRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/DeleteSlotReq" +
            "uest", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/DeleteSlotReq" +
            "uestResponse")]
        System.IAsyncResult BeginDeleteSlotRequest(App15.ServiceReference2.SlotRequestIdentifier slotRequestId, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndDeleteSlotRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/UpdateSlotReq" +
            "uestStatus", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/UpdateSlotReq" +
            "uestStatusResponse")]
        System.IAsyncResult BeginUpdateSlotRequestStatus(App15.ServiceReference2.SlotRequestIdentifier slotRequestId, string slotRequestStatus, string comment, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndUpdateSlotRequestStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetSlotReques" +
            "tStatusHistory", ReplyAction="http://www.sita.aero/ams6-xml-api-webservice/IAMSIntegrationService/GetSlotReques" +
            "tStatusHistoryResponse")]
        System.IAsyncResult BeginGetSlotRequestStatusHistory(App15.ServiceReference2.SlotRequestIdentifier slotRequestIdentifier, System.AsyncCallback callback, object asyncState);
        
        System.Xml.Linq.XElement EndGetSlotRequestStatusHistory(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAMSIntegrationServiceChannel : App15.ServiceReference2.IAMSIntegrationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFlightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFlightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMovementsOverlappingWithPeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMovementsOverlappingWithPeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAirportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAirportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAircraftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAircraftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAircraftTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAircraftTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAirlinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAirlinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomsTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomsTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRoutesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRoutesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStandsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStandsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCarouselsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCarouselsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCheckInsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCheckInsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetChutesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetChutesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLoungesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLoungesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAircraftCustomFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAircraftCustomFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAircraftTypeCustomFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAircraftTypeCustomFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAirlineCustomFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAirlineCustomFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAirportCustomFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAirportCustomFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRouteCustomFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRouteCustomFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetArrivalFlightCustomFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetArrivalFlightCustomFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDepartureFlightCustomFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDepartureFlightCustomFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMovementCustomFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMovementCustomFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFlightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFlightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCommonCheckInAllocationShapesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCommonCheckInAllocationShapesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateFlightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateFlightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateFlightExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateFlightExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteFlightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteFlightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateFlightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateFlightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateFlightExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateFlightExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStandDowngradesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStandDowngradesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGateDowngradesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGateDowngradesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetChuteDowngradesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetChuteDowngradesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCheckInDowngradesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCheckInDowngradesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLoungeDowngradesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLoungeDowngradesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCarouselDowngradesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCarouselDowngradesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlotRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlotRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlotRequestsForAirlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlotRequestsForAirlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateSlotRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateSlotRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateSlotRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateSlotRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteSlotRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteSlotRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateSlotRequestStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateSlotRequestStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlotRequestStatusHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlotRequestStatusHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AMSIntegrationServiceClient : System.ServiceModel.ClientBase<App15.ServiceReference2.IAMSIntegrationService>, App15.ServiceReference2.IAMSIntegrationService {
        
        private BeginOperationDelegate onBeginGetFlightsDelegate;
        
        private EndOperationDelegate onEndGetFlightsDelegate;
        
        private System.Threading.SendOrPostCallback onGetFlightsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMovementsOverlappingWithPeriodDelegate;
        
        private EndOperationDelegate onEndGetMovementsOverlappingWithPeriodDelegate;
        
        private System.Threading.SendOrPostCallback onGetMovementsOverlappingWithPeriodCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAirportsDelegate;
        
        private EndOperationDelegate onEndGetAirportsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAirportsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAircraftDelegate;
        
        private EndOperationDelegate onEndGetAircraftDelegate;
        
        private System.Threading.SendOrPostCallback onGetAircraftCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAircraftTypesDelegate;
        
        private EndOperationDelegate onEndGetAircraftTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAircraftTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAirlinesDelegate;
        
        private EndOperationDelegate onEndGetAirlinesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAirlinesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomsTypesDelegate;
        
        private EndOperationDelegate onEndGetCustomsTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomsTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRoutesDelegate;
        
        private EndOperationDelegate onEndGetRoutesDelegate;
        
        private System.Threading.SendOrPostCallback onGetRoutesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAreasDelegate;
        
        private EndOperationDelegate onEndGetAreasDelegate;
        
        private System.Threading.SendOrPostCallback onGetAreasCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStandsDelegate;
        
        private EndOperationDelegate onEndGetStandsDelegate;
        
        private System.Threading.SendOrPostCallback onGetStandsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCarouselsDelegate;
        
        private EndOperationDelegate onEndGetCarouselsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCarouselsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCheckInsDelegate;
        
        private EndOperationDelegate onEndGetCheckInsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCheckInsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetChutesDelegate;
        
        private EndOperationDelegate onEndGetChutesDelegate;
        
        private System.Threading.SendOrPostCallback onGetChutesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGatesDelegate;
        
        private EndOperationDelegate onEndGetGatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetGatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLoungesDelegate;
        
        private EndOperationDelegate onEndGetLoungesDelegate;
        
        private System.Threading.SendOrPostCallback onGetLoungesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAircraftCustomFieldsDelegate;
        
        private EndOperationDelegate onEndGetAircraftCustomFieldsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAircraftCustomFieldsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAircraftTypeCustomFieldsDelegate;
        
        private EndOperationDelegate onEndGetAircraftTypeCustomFieldsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAircraftTypeCustomFieldsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAirlineCustomFieldsDelegate;
        
        private EndOperationDelegate onEndGetAirlineCustomFieldsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAirlineCustomFieldsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAirportCustomFieldsDelegate;
        
        private EndOperationDelegate onEndGetAirportCustomFieldsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAirportCustomFieldsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRouteCustomFieldsDelegate;
        
        private EndOperationDelegate onEndGetRouteCustomFieldsDelegate;
        
        private System.Threading.SendOrPostCallback onGetRouteCustomFieldsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetArrivalFlightCustomFieldsDelegate;
        
        private EndOperationDelegate onEndGetArrivalFlightCustomFieldsDelegate;
        
        private System.Threading.SendOrPostCallback onGetArrivalFlightCustomFieldsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDepartureFlightCustomFieldsDelegate;
        
        private EndOperationDelegate onEndGetDepartureFlightCustomFieldsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDepartureFlightCustomFieldsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMovementCustomFieldsDelegate;
        
        private EndOperationDelegate onEndGetMovementCustomFieldsDelegate;
        
        private System.Threading.SendOrPostCallback onGetMovementCustomFieldsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFlightDelegate;
        
        private EndOperationDelegate onEndGetFlightDelegate;
        
        private System.Threading.SendOrPostCallback onGetFlightCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCommonCheckInAllocationShapesDelegate;
        
        private EndOperationDelegate onEndGetCommonCheckInAllocationShapesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCommonCheckInAllocationShapesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateFlightDelegate;
        
        private EndOperationDelegate onEndCreateFlightDelegate;
        
        private System.Threading.SendOrPostCallback onCreateFlightCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateFlightExtendedDelegate;
        
        private EndOperationDelegate onEndCreateFlightExtendedDelegate;
        
        private System.Threading.SendOrPostCallback onCreateFlightExtendedCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteFlightDelegate;
        
        private EndOperationDelegate onEndDeleteFlightDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteFlightCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateFlightDelegate;
        
        private EndOperationDelegate onEndUpdateFlightDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateFlightCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateFlightExtendedDelegate;
        
        private EndOperationDelegate onEndUpdateFlightExtendedDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateFlightExtendedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStandDowngradesDelegate;
        
        private EndOperationDelegate onEndGetStandDowngradesDelegate;
        
        private System.Threading.SendOrPostCallback onGetStandDowngradesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGateDowngradesDelegate;
        
        private EndOperationDelegate onEndGetGateDowngradesDelegate;
        
        private System.Threading.SendOrPostCallback onGetGateDowngradesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetChuteDowngradesDelegate;
        
        private EndOperationDelegate onEndGetChuteDowngradesDelegate;
        
        private System.Threading.SendOrPostCallback onGetChuteDowngradesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCheckInDowngradesDelegate;
        
        private EndOperationDelegate onEndGetCheckInDowngradesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCheckInDowngradesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLoungeDowngradesDelegate;
        
        private EndOperationDelegate onEndGetLoungeDowngradesDelegate;
        
        private System.Threading.SendOrPostCallback onGetLoungeDowngradesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCarouselDowngradesDelegate;
        
        private EndOperationDelegate onEndGetCarouselDowngradesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCarouselDowngradesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlotRequestsDelegate;
        
        private EndOperationDelegate onEndGetSlotRequestsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlotRequestsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlotRequestsForAirlineDelegate;
        
        private EndOperationDelegate onEndGetSlotRequestsForAirlineDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlotRequestsForAirlineCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateSlotRequestDelegate;
        
        private EndOperationDelegate onEndCreateSlotRequestDelegate;
        
        private System.Threading.SendOrPostCallback onCreateSlotRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSlotRequestDelegate;
        
        private EndOperationDelegate onEndUpdateSlotRequestDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSlotRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteSlotRequestDelegate;
        
        private EndOperationDelegate onEndDeleteSlotRequestDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteSlotRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSlotRequestStatusDelegate;
        
        private EndOperationDelegate onEndUpdateSlotRequestStatusDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSlotRequestStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlotRequestStatusHistoryDelegate;
        
        private EndOperationDelegate onEndGetSlotRequestStatusHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlotRequestStatusHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AMSIntegrationServiceClient() : 
                base(AMSIntegrationServiceClient.GetDefaultBinding(), AMSIntegrationServiceClient.GetDefaultEndpointAddress()) {
        }
        
        public AMSIntegrationServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(AMSIntegrationServiceClient.GetBindingForEndpoint(endpointConfiguration), AMSIntegrationServiceClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public AMSIntegrationServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AMSIntegrationServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public AMSIntegrationServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AMSIntegrationServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public AMSIntegrationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetFlightsCompletedEventArgs> GetFlightsCompleted;
        
        public event System.EventHandler<GetMovementsOverlappingWithPeriodCompletedEventArgs> GetMovementsOverlappingWithPeriodCompleted;
        
        public event System.EventHandler<GetAirportsCompletedEventArgs> GetAirportsCompleted;
        
        public event System.EventHandler<GetAircraftCompletedEventArgs> GetAircraftCompleted;
        
        public event System.EventHandler<GetAircraftTypesCompletedEventArgs> GetAircraftTypesCompleted;
        
        public event System.EventHandler<GetAirlinesCompletedEventArgs> GetAirlinesCompleted;
        
        public event System.EventHandler<GetCustomsTypesCompletedEventArgs> GetCustomsTypesCompleted;
        
        public event System.EventHandler<GetRoutesCompletedEventArgs> GetRoutesCompleted;
        
        public event System.EventHandler<GetAreasCompletedEventArgs> GetAreasCompleted;
        
        public event System.EventHandler<GetStandsCompletedEventArgs> GetStandsCompleted;
        
        public event System.EventHandler<GetCarouselsCompletedEventArgs> GetCarouselsCompleted;
        
        public event System.EventHandler<GetCheckInsCompletedEventArgs> GetCheckInsCompleted;
        
        public event System.EventHandler<GetChutesCompletedEventArgs> GetChutesCompleted;
        
        public event System.EventHandler<GetGatesCompletedEventArgs> GetGatesCompleted;
        
        public event System.EventHandler<GetLoungesCompletedEventArgs> GetLoungesCompleted;
        
        public event System.EventHandler<GetAircraftCustomFieldsCompletedEventArgs> GetAircraftCustomFieldsCompleted;
        
        public event System.EventHandler<GetAircraftTypeCustomFieldsCompletedEventArgs> GetAircraftTypeCustomFieldsCompleted;
        
        public event System.EventHandler<GetAirlineCustomFieldsCompletedEventArgs> GetAirlineCustomFieldsCompleted;
        
        public event System.EventHandler<GetAirportCustomFieldsCompletedEventArgs> GetAirportCustomFieldsCompleted;
        
        public event System.EventHandler<GetRouteCustomFieldsCompletedEventArgs> GetRouteCustomFieldsCompleted;
        
        public event System.EventHandler<GetArrivalFlightCustomFieldsCompletedEventArgs> GetArrivalFlightCustomFieldsCompleted;
        
        public event System.EventHandler<GetDepartureFlightCustomFieldsCompletedEventArgs> GetDepartureFlightCustomFieldsCompleted;
        
        public event System.EventHandler<GetMovementCustomFieldsCompletedEventArgs> GetMovementCustomFieldsCompleted;
        
        public event System.EventHandler<GetFlightCompletedEventArgs> GetFlightCompleted;
        
        public event System.EventHandler<GetCommonCheckInAllocationShapesCompletedEventArgs> GetCommonCheckInAllocationShapesCompleted;
        
        public event System.EventHandler<CreateFlightCompletedEventArgs> CreateFlightCompleted;
        
        public event System.EventHandler<CreateFlightExtendedCompletedEventArgs> CreateFlightExtendedCompleted;
        
        public event System.EventHandler<DeleteFlightCompletedEventArgs> DeleteFlightCompleted;
        
        public event System.EventHandler<UpdateFlightCompletedEventArgs> UpdateFlightCompleted;
        
        public event System.EventHandler<UpdateFlightExtendedCompletedEventArgs> UpdateFlightExtendedCompleted;
        
        public event System.EventHandler<GetStandDowngradesCompletedEventArgs> GetStandDowngradesCompleted;
        
        public event System.EventHandler<GetGateDowngradesCompletedEventArgs> GetGateDowngradesCompleted;
        
        public event System.EventHandler<GetChuteDowngradesCompletedEventArgs> GetChuteDowngradesCompleted;
        
        public event System.EventHandler<GetCheckInDowngradesCompletedEventArgs> GetCheckInDowngradesCompleted;
        
        public event System.EventHandler<GetLoungeDowngradesCompletedEventArgs> GetLoungeDowngradesCompleted;
        
        public event System.EventHandler<GetCarouselDowngradesCompletedEventArgs> GetCarouselDowngradesCompleted;
        
        public event System.EventHandler<GetSlotRequestsCompletedEventArgs> GetSlotRequestsCompleted;
        
        public event System.EventHandler<GetSlotRequestsForAirlineCompletedEventArgs> GetSlotRequestsForAirlineCompleted;
        
        public event System.EventHandler<CreateSlotRequestCompletedEventArgs> CreateSlotRequestCompleted;
        
        public event System.EventHandler<UpdateSlotRequestCompletedEventArgs> UpdateSlotRequestCompleted;
        
        public event System.EventHandler<DeleteSlotRequestCompletedEventArgs> DeleteSlotRequestCompleted;
        
        public event System.EventHandler<UpdateSlotRequestStatusCompletedEventArgs> UpdateSlotRequestStatusCompleted;
        
        public event System.EventHandler<GetSlotRequestStatusHistoryCompletedEventArgs> GetSlotRequestStatusHistoryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetFlights(System.DateTime from, System.DateTime to, string airport, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFlights(from, to, airport, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetFlights(System.IAsyncResult result) {
            return base.Channel.EndGetFlights(result);
        }
        
        private System.IAsyncResult OnBeginGetFlights(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime from = ((System.DateTime)(inValues[0]));
            System.DateTime to = ((System.DateTime)(inValues[1]));
            string airport = ((string)(inValues[2]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[3]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetFlights(from, to, airport, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetFlights(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetFlights(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFlightsCompleted(object state) {
            if ((this.GetFlightsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFlightsCompleted(this, new GetFlightsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFlightsAsync(System.DateTime from, System.DateTime to, string airport, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetFlightsAsync(from, to, airport, airportIdentifierType, null);
        }
        
        public void GetFlightsAsync(System.DateTime from, System.DateTime to, string airport, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetFlightsDelegate == null)) {
                this.onBeginGetFlightsDelegate = new BeginOperationDelegate(this.OnBeginGetFlights);
            }
            if ((this.onEndGetFlightsDelegate == null)) {
                this.onEndGetFlightsDelegate = new EndOperationDelegate(this.OnEndGetFlights);
            }
            if ((this.onGetFlightsCompletedDelegate == null)) {
                this.onGetFlightsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFlightsCompleted);
            }
            base.InvokeAsync(this.onBeginGetFlightsDelegate, new object[] {
                        from,
                        to,
                        airport,
                        airportIdentifierType}, this.onEndGetFlightsDelegate, this.onGetFlightsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetMovementsOverlappingWithPeriod(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMovementsOverlappingWithPeriod(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetMovementsOverlappingWithPeriod(System.IAsyncResult result) {
            return base.Channel.EndGetMovementsOverlappingWithPeriod(result);
        }
        
        private System.IAsyncResult OnBeginGetMovementsOverlappingWithPeriod(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime from = ((System.DateTime)(inValues[0]));
            System.DateTime to = ((System.DateTime)(inValues[1]));
            string airportCode = ((string)(inValues[2]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[3]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetMovementsOverlappingWithPeriod(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetMovementsOverlappingWithPeriod(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetMovementsOverlappingWithPeriod(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMovementsOverlappingWithPeriodCompleted(object state) {
            if ((this.GetMovementsOverlappingWithPeriodCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMovementsOverlappingWithPeriodCompleted(this, new GetMovementsOverlappingWithPeriodCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMovementsOverlappingWithPeriodAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetMovementsOverlappingWithPeriodAsync(from, to, airportCode, airportIdentifierType, null);
        }
        
        public void GetMovementsOverlappingWithPeriodAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetMovementsOverlappingWithPeriodDelegate == null)) {
                this.onBeginGetMovementsOverlappingWithPeriodDelegate = new BeginOperationDelegate(this.OnBeginGetMovementsOverlappingWithPeriod);
            }
            if ((this.onEndGetMovementsOverlappingWithPeriodDelegate == null)) {
                this.onEndGetMovementsOverlappingWithPeriodDelegate = new EndOperationDelegate(this.OnEndGetMovementsOverlappingWithPeriod);
            }
            if ((this.onGetMovementsOverlappingWithPeriodCompletedDelegate == null)) {
                this.onGetMovementsOverlappingWithPeriodCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMovementsOverlappingWithPeriodCompleted);
            }
            base.InvokeAsync(this.onBeginGetMovementsOverlappingWithPeriodDelegate, new object[] {
                        from,
                        to,
                        airportCode,
                        airportIdentifierType}, this.onEndGetMovementsOverlappingWithPeriodDelegate, this.onGetMovementsOverlappingWithPeriodCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetAirports(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAirports(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetAirports(System.IAsyncResult result) {
            return base.Channel.EndGetAirports(result);
        }
        
        private System.IAsyncResult OnBeginGetAirports(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetAirports(callback, asyncState);
        }
        
        private object[] OnEndGetAirports(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetAirports(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAirportsCompleted(object state) {
            if ((this.GetAirportsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAirportsCompleted(this, new GetAirportsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAirportsAsync() {
            this.GetAirportsAsync(null);
        }
        
        public void GetAirportsAsync(object userState) {
            if ((this.onBeginGetAirportsDelegate == null)) {
                this.onBeginGetAirportsDelegate = new BeginOperationDelegate(this.OnBeginGetAirports);
            }
            if ((this.onEndGetAirportsDelegate == null)) {
                this.onEndGetAirportsDelegate = new EndOperationDelegate(this.OnEndGetAirports);
            }
            if ((this.onGetAirportsCompletedDelegate == null)) {
                this.onGetAirportsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAirportsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAirportsDelegate, null, this.onEndGetAirportsDelegate, this.onGetAirportsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetAircraft(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAircraft(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetAircraft(System.IAsyncResult result) {
            return base.Channel.EndGetAircraft(result);
        }
        
        private System.IAsyncResult OnBeginGetAircraft(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetAircraft(callback, asyncState);
        }
        
        private object[] OnEndGetAircraft(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetAircraft(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAircraftCompleted(object state) {
            if ((this.GetAircraftCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAircraftCompleted(this, new GetAircraftCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAircraftAsync() {
            this.GetAircraftAsync(null);
        }
        
        public void GetAircraftAsync(object userState) {
            if ((this.onBeginGetAircraftDelegate == null)) {
                this.onBeginGetAircraftDelegate = new BeginOperationDelegate(this.OnBeginGetAircraft);
            }
            if ((this.onEndGetAircraftDelegate == null)) {
                this.onEndGetAircraftDelegate = new EndOperationDelegate(this.OnEndGetAircraft);
            }
            if ((this.onGetAircraftCompletedDelegate == null)) {
                this.onGetAircraftCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAircraftCompleted);
            }
            base.InvokeAsync(this.onBeginGetAircraftDelegate, null, this.onEndGetAircraftDelegate, this.onGetAircraftCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetAircraftTypes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAircraftTypes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetAircraftTypes(System.IAsyncResult result) {
            return base.Channel.EndGetAircraftTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetAircraftTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetAircraftTypes(callback, asyncState);
        }
        
        private object[] OnEndGetAircraftTypes(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetAircraftTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAircraftTypesCompleted(object state) {
            if ((this.GetAircraftTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAircraftTypesCompleted(this, new GetAircraftTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAircraftTypesAsync() {
            this.GetAircraftTypesAsync(null);
        }
        
        public void GetAircraftTypesAsync(object userState) {
            if ((this.onBeginGetAircraftTypesDelegate == null)) {
                this.onBeginGetAircraftTypesDelegate = new BeginOperationDelegate(this.OnBeginGetAircraftTypes);
            }
            if ((this.onEndGetAircraftTypesDelegate == null)) {
                this.onEndGetAircraftTypesDelegate = new EndOperationDelegate(this.OnEndGetAircraftTypes);
            }
            if ((this.onGetAircraftTypesCompletedDelegate == null)) {
                this.onGetAircraftTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAircraftTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAircraftTypesDelegate, null, this.onEndGetAircraftTypesDelegate, this.onGetAircraftTypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetAirlines(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAirlines(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetAirlines(System.IAsyncResult result) {
            return base.Channel.EndGetAirlines(result);
        }
        
        private System.IAsyncResult OnBeginGetAirlines(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetAirlines(callback, asyncState);
        }
        
        private object[] OnEndGetAirlines(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetAirlines(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAirlinesCompleted(object state) {
            if ((this.GetAirlinesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAirlinesCompleted(this, new GetAirlinesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAirlinesAsync() {
            this.GetAirlinesAsync(null);
        }
        
        public void GetAirlinesAsync(object userState) {
            if ((this.onBeginGetAirlinesDelegate == null)) {
                this.onBeginGetAirlinesDelegate = new BeginOperationDelegate(this.OnBeginGetAirlines);
            }
            if ((this.onEndGetAirlinesDelegate == null)) {
                this.onEndGetAirlinesDelegate = new EndOperationDelegate(this.OnEndGetAirlines);
            }
            if ((this.onGetAirlinesCompletedDelegate == null)) {
                this.onGetAirlinesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAirlinesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAirlinesDelegate, null, this.onEndGetAirlinesDelegate, this.onGetAirlinesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetCustomsTypes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomsTypes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetCustomsTypes(System.IAsyncResult result) {
            return base.Channel.EndGetCustomsTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomsTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetCustomsTypes(callback, asyncState);
        }
        
        private object[] OnEndGetCustomsTypes(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetCustomsTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomsTypesCompleted(object state) {
            if ((this.GetCustomsTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomsTypesCompleted(this, new GetCustomsTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomsTypesAsync() {
            this.GetCustomsTypesAsync(null);
        }
        
        public void GetCustomsTypesAsync(object userState) {
            if ((this.onBeginGetCustomsTypesDelegate == null)) {
                this.onBeginGetCustomsTypesDelegate = new BeginOperationDelegate(this.OnBeginGetCustomsTypes);
            }
            if ((this.onEndGetCustomsTypesDelegate == null)) {
                this.onEndGetCustomsTypesDelegate = new EndOperationDelegate(this.OnEndGetCustomsTypes);
            }
            if ((this.onGetCustomsTypesCompletedDelegate == null)) {
                this.onGetCustomsTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomsTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomsTypesDelegate, null, this.onEndGetCustomsTypesDelegate, this.onGetCustomsTypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetRoutes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRoutes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetRoutes(System.IAsyncResult result) {
            return base.Channel.EndGetRoutes(result);
        }
        
        private System.IAsyncResult OnBeginGetRoutes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetRoutes(callback, asyncState);
        }
        
        private object[] OnEndGetRoutes(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetRoutes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRoutesCompleted(object state) {
            if ((this.GetRoutesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRoutesCompleted(this, new GetRoutesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRoutesAsync() {
            this.GetRoutesAsync(null);
        }
        
        public void GetRoutesAsync(object userState) {
            if ((this.onBeginGetRoutesDelegate == null)) {
                this.onBeginGetRoutesDelegate = new BeginOperationDelegate(this.OnBeginGetRoutes);
            }
            if ((this.onEndGetRoutesDelegate == null)) {
                this.onEndGetRoutesDelegate = new EndOperationDelegate(this.OnEndGetRoutes);
            }
            if ((this.onGetRoutesCompletedDelegate == null)) {
                this.onGetRoutesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRoutesCompleted);
            }
            base.InvokeAsync(this.onBeginGetRoutesDelegate, null, this.onEndGetRoutesDelegate, this.onGetRoutesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetAreas(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAreas(airportCode, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetAreas(System.IAsyncResult result) {
            return base.Channel.EndGetAreas(result);
        }
        
        private System.IAsyncResult OnBeginGetAreas(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string airportCode = ((string)(inValues[0]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[1]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetAreas(airportCode, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetAreas(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetAreas(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAreasCompleted(object state) {
            if ((this.GetAreasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAreasCompleted(this, new GetAreasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAreasAsync(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetAreasAsync(airportCode, airportIdentifierType, null);
        }
        
        public void GetAreasAsync(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetAreasDelegate == null)) {
                this.onBeginGetAreasDelegate = new BeginOperationDelegate(this.OnBeginGetAreas);
            }
            if ((this.onEndGetAreasDelegate == null)) {
                this.onEndGetAreasDelegate = new EndOperationDelegate(this.OnEndGetAreas);
            }
            if ((this.onGetAreasCompletedDelegate == null)) {
                this.onGetAreasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAreasCompleted);
            }
            base.InvokeAsync(this.onBeginGetAreasDelegate, new object[] {
                        airportCode,
                        airportIdentifierType}, this.onEndGetAreasDelegate, this.onGetAreasCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetStands(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStands(airportCode, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetStands(System.IAsyncResult result) {
            return base.Channel.EndGetStands(result);
        }
        
        private System.IAsyncResult OnBeginGetStands(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string airportCode = ((string)(inValues[0]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[1]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetStands(airportCode, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetStands(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetStands(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStandsCompleted(object state) {
            if ((this.GetStandsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStandsCompleted(this, new GetStandsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStandsAsync(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetStandsAsync(airportCode, airportIdentifierType, null);
        }
        
        public void GetStandsAsync(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetStandsDelegate == null)) {
                this.onBeginGetStandsDelegate = new BeginOperationDelegate(this.OnBeginGetStands);
            }
            if ((this.onEndGetStandsDelegate == null)) {
                this.onEndGetStandsDelegate = new EndOperationDelegate(this.OnEndGetStands);
            }
            if ((this.onGetStandsCompletedDelegate == null)) {
                this.onGetStandsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStandsCompleted);
            }
            base.InvokeAsync(this.onBeginGetStandsDelegate, new object[] {
                        airportCode,
                        airportIdentifierType}, this.onEndGetStandsDelegate, this.onGetStandsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetCarousels(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCarousels(airportCode, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetCarousels(System.IAsyncResult result) {
            return base.Channel.EndGetCarousels(result);
        }
        
        private System.IAsyncResult OnBeginGetCarousels(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string airportCode = ((string)(inValues[0]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[1]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetCarousels(airportCode, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetCarousels(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetCarousels(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCarouselsCompleted(object state) {
            if ((this.GetCarouselsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCarouselsCompleted(this, new GetCarouselsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCarouselsAsync(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetCarouselsAsync(airportCode, airportIdentifierType, null);
        }
        
        public void GetCarouselsAsync(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetCarouselsDelegate == null)) {
                this.onBeginGetCarouselsDelegate = new BeginOperationDelegate(this.OnBeginGetCarousels);
            }
            if ((this.onEndGetCarouselsDelegate == null)) {
                this.onEndGetCarouselsDelegate = new EndOperationDelegate(this.OnEndGetCarousels);
            }
            if ((this.onGetCarouselsCompletedDelegate == null)) {
                this.onGetCarouselsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCarouselsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCarouselsDelegate, new object[] {
                        airportCode,
                        airportIdentifierType}, this.onEndGetCarouselsDelegate, this.onGetCarouselsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetCheckIns(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCheckIns(airportCode, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetCheckIns(System.IAsyncResult result) {
            return base.Channel.EndGetCheckIns(result);
        }
        
        private System.IAsyncResult OnBeginGetCheckIns(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string airportCode = ((string)(inValues[0]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[1]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetCheckIns(airportCode, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetCheckIns(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetCheckIns(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCheckInsCompleted(object state) {
            if ((this.GetCheckInsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCheckInsCompleted(this, new GetCheckInsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCheckInsAsync(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetCheckInsAsync(airportCode, airportIdentifierType, null);
        }
        
        public void GetCheckInsAsync(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetCheckInsDelegate == null)) {
                this.onBeginGetCheckInsDelegate = new BeginOperationDelegate(this.OnBeginGetCheckIns);
            }
            if ((this.onEndGetCheckInsDelegate == null)) {
                this.onEndGetCheckInsDelegate = new EndOperationDelegate(this.OnEndGetCheckIns);
            }
            if ((this.onGetCheckInsCompletedDelegate == null)) {
                this.onGetCheckInsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCheckInsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCheckInsDelegate, new object[] {
                        airportCode,
                        airportIdentifierType}, this.onEndGetCheckInsDelegate, this.onGetCheckInsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetChutes(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetChutes(airportCode, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetChutes(System.IAsyncResult result) {
            return base.Channel.EndGetChutes(result);
        }
        
        private System.IAsyncResult OnBeginGetChutes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string airportCode = ((string)(inValues[0]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[1]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetChutes(airportCode, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetChutes(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetChutes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetChutesCompleted(object state) {
            if ((this.GetChutesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetChutesCompleted(this, new GetChutesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetChutesAsync(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetChutesAsync(airportCode, airportIdentifierType, null);
        }
        
        public void GetChutesAsync(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetChutesDelegate == null)) {
                this.onBeginGetChutesDelegate = new BeginOperationDelegate(this.OnBeginGetChutes);
            }
            if ((this.onEndGetChutesDelegate == null)) {
                this.onEndGetChutesDelegate = new EndOperationDelegate(this.OnEndGetChutes);
            }
            if ((this.onGetChutesCompletedDelegate == null)) {
                this.onGetChutesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetChutesCompleted);
            }
            base.InvokeAsync(this.onBeginGetChutesDelegate, new object[] {
                        airportCode,
                        airportIdentifierType}, this.onEndGetChutesDelegate, this.onGetChutesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetGates(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGates(airportCode, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetGates(System.IAsyncResult result) {
            return base.Channel.EndGetGates(result);
        }
        
        private System.IAsyncResult OnBeginGetGates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string airportCode = ((string)(inValues[0]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[1]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetGates(airportCode, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetGates(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetGates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGatesCompleted(object state) {
            if ((this.GetGatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGatesCompleted(this, new GetGatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGatesAsync(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetGatesAsync(airportCode, airportIdentifierType, null);
        }
        
        public void GetGatesAsync(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetGatesDelegate == null)) {
                this.onBeginGetGatesDelegate = new BeginOperationDelegate(this.OnBeginGetGates);
            }
            if ((this.onEndGetGatesDelegate == null)) {
                this.onEndGetGatesDelegate = new EndOperationDelegate(this.OnEndGetGates);
            }
            if ((this.onGetGatesCompletedDelegate == null)) {
                this.onGetGatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetGatesDelegate, new object[] {
                        airportCode,
                        airportIdentifierType}, this.onEndGetGatesDelegate, this.onGetGatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetLounges(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLounges(airportCode, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetLounges(System.IAsyncResult result) {
            return base.Channel.EndGetLounges(result);
        }
        
        private System.IAsyncResult OnBeginGetLounges(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string airportCode = ((string)(inValues[0]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[1]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetLounges(airportCode, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetLounges(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetLounges(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLoungesCompleted(object state) {
            if ((this.GetLoungesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLoungesCompleted(this, new GetLoungesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLoungesAsync(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetLoungesAsync(airportCode, airportIdentifierType, null);
        }
        
        public void GetLoungesAsync(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetLoungesDelegate == null)) {
                this.onBeginGetLoungesDelegate = new BeginOperationDelegate(this.OnBeginGetLounges);
            }
            if ((this.onEndGetLoungesDelegate == null)) {
                this.onEndGetLoungesDelegate = new EndOperationDelegate(this.OnEndGetLounges);
            }
            if ((this.onGetLoungesCompletedDelegate == null)) {
                this.onGetLoungesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLoungesCompleted);
            }
            base.InvokeAsync(this.onBeginGetLoungesDelegate, new object[] {
                        airportCode,
                        airportIdentifierType}, this.onEndGetLoungesDelegate, this.onGetLoungesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetAircraftCustomFields(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAircraftCustomFields(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetAircraftCustomFields(System.IAsyncResult result) {
            return base.Channel.EndGetAircraftCustomFields(result);
        }
        
        private System.IAsyncResult OnBeginGetAircraftCustomFields(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetAircraftCustomFields(callback, asyncState);
        }
        
        private object[] OnEndGetAircraftCustomFields(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetAircraftCustomFields(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAircraftCustomFieldsCompleted(object state) {
            if ((this.GetAircraftCustomFieldsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAircraftCustomFieldsCompleted(this, new GetAircraftCustomFieldsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAircraftCustomFieldsAsync() {
            this.GetAircraftCustomFieldsAsync(null);
        }
        
        public void GetAircraftCustomFieldsAsync(object userState) {
            if ((this.onBeginGetAircraftCustomFieldsDelegate == null)) {
                this.onBeginGetAircraftCustomFieldsDelegate = new BeginOperationDelegate(this.OnBeginGetAircraftCustomFields);
            }
            if ((this.onEndGetAircraftCustomFieldsDelegate == null)) {
                this.onEndGetAircraftCustomFieldsDelegate = new EndOperationDelegate(this.OnEndGetAircraftCustomFields);
            }
            if ((this.onGetAircraftCustomFieldsCompletedDelegate == null)) {
                this.onGetAircraftCustomFieldsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAircraftCustomFieldsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAircraftCustomFieldsDelegate, null, this.onEndGetAircraftCustomFieldsDelegate, this.onGetAircraftCustomFieldsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetAircraftTypeCustomFields(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAircraftTypeCustomFields(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetAircraftTypeCustomFields(System.IAsyncResult result) {
            return base.Channel.EndGetAircraftTypeCustomFields(result);
        }
        
        private System.IAsyncResult OnBeginGetAircraftTypeCustomFields(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetAircraftTypeCustomFields(callback, asyncState);
        }
        
        private object[] OnEndGetAircraftTypeCustomFields(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetAircraftTypeCustomFields(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAircraftTypeCustomFieldsCompleted(object state) {
            if ((this.GetAircraftTypeCustomFieldsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAircraftTypeCustomFieldsCompleted(this, new GetAircraftTypeCustomFieldsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAircraftTypeCustomFieldsAsync() {
            this.GetAircraftTypeCustomFieldsAsync(null);
        }
        
        public void GetAircraftTypeCustomFieldsAsync(object userState) {
            if ((this.onBeginGetAircraftTypeCustomFieldsDelegate == null)) {
                this.onBeginGetAircraftTypeCustomFieldsDelegate = new BeginOperationDelegate(this.OnBeginGetAircraftTypeCustomFields);
            }
            if ((this.onEndGetAircraftTypeCustomFieldsDelegate == null)) {
                this.onEndGetAircraftTypeCustomFieldsDelegate = new EndOperationDelegate(this.OnEndGetAircraftTypeCustomFields);
            }
            if ((this.onGetAircraftTypeCustomFieldsCompletedDelegate == null)) {
                this.onGetAircraftTypeCustomFieldsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAircraftTypeCustomFieldsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAircraftTypeCustomFieldsDelegate, null, this.onEndGetAircraftTypeCustomFieldsDelegate, this.onGetAircraftTypeCustomFieldsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetAirlineCustomFields(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAirlineCustomFields(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetAirlineCustomFields(System.IAsyncResult result) {
            return base.Channel.EndGetAirlineCustomFields(result);
        }
        
        private System.IAsyncResult OnBeginGetAirlineCustomFields(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetAirlineCustomFields(callback, asyncState);
        }
        
        private object[] OnEndGetAirlineCustomFields(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetAirlineCustomFields(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAirlineCustomFieldsCompleted(object state) {
            if ((this.GetAirlineCustomFieldsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAirlineCustomFieldsCompleted(this, new GetAirlineCustomFieldsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAirlineCustomFieldsAsync() {
            this.GetAirlineCustomFieldsAsync(null);
        }
        
        public void GetAirlineCustomFieldsAsync(object userState) {
            if ((this.onBeginGetAirlineCustomFieldsDelegate == null)) {
                this.onBeginGetAirlineCustomFieldsDelegate = new BeginOperationDelegate(this.OnBeginGetAirlineCustomFields);
            }
            if ((this.onEndGetAirlineCustomFieldsDelegate == null)) {
                this.onEndGetAirlineCustomFieldsDelegate = new EndOperationDelegate(this.OnEndGetAirlineCustomFields);
            }
            if ((this.onGetAirlineCustomFieldsCompletedDelegate == null)) {
                this.onGetAirlineCustomFieldsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAirlineCustomFieldsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAirlineCustomFieldsDelegate, null, this.onEndGetAirlineCustomFieldsDelegate, this.onGetAirlineCustomFieldsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetAirportCustomFields(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAirportCustomFields(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetAirportCustomFields(System.IAsyncResult result) {
            return base.Channel.EndGetAirportCustomFields(result);
        }
        
        private System.IAsyncResult OnBeginGetAirportCustomFields(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetAirportCustomFields(callback, asyncState);
        }
        
        private object[] OnEndGetAirportCustomFields(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetAirportCustomFields(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAirportCustomFieldsCompleted(object state) {
            if ((this.GetAirportCustomFieldsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAirportCustomFieldsCompleted(this, new GetAirportCustomFieldsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAirportCustomFieldsAsync() {
            this.GetAirportCustomFieldsAsync(null);
        }
        
        public void GetAirportCustomFieldsAsync(object userState) {
            if ((this.onBeginGetAirportCustomFieldsDelegate == null)) {
                this.onBeginGetAirportCustomFieldsDelegate = new BeginOperationDelegate(this.OnBeginGetAirportCustomFields);
            }
            if ((this.onEndGetAirportCustomFieldsDelegate == null)) {
                this.onEndGetAirportCustomFieldsDelegate = new EndOperationDelegate(this.OnEndGetAirportCustomFields);
            }
            if ((this.onGetAirportCustomFieldsCompletedDelegate == null)) {
                this.onGetAirportCustomFieldsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAirportCustomFieldsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAirportCustomFieldsDelegate, null, this.onEndGetAirportCustomFieldsDelegate, this.onGetAirportCustomFieldsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetRouteCustomFields(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRouteCustomFields(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetRouteCustomFields(System.IAsyncResult result) {
            return base.Channel.EndGetRouteCustomFields(result);
        }
        
        private System.IAsyncResult OnBeginGetRouteCustomFields(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetRouteCustomFields(callback, asyncState);
        }
        
        private object[] OnEndGetRouteCustomFields(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetRouteCustomFields(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRouteCustomFieldsCompleted(object state) {
            if ((this.GetRouteCustomFieldsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRouteCustomFieldsCompleted(this, new GetRouteCustomFieldsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRouteCustomFieldsAsync() {
            this.GetRouteCustomFieldsAsync(null);
        }
        
        public void GetRouteCustomFieldsAsync(object userState) {
            if ((this.onBeginGetRouteCustomFieldsDelegate == null)) {
                this.onBeginGetRouteCustomFieldsDelegate = new BeginOperationDelegate(this.OnBeginGetRouteCustomFields);
            }
            if ((this.onEndGetRouteCustomFieldsDelegate == null)) {
                this.onEndGetRouteCustomFieldsDelegate = new EndOperationDelegate(this.OnEndGetRouteCustomFields);
            }
            if ((this.onGetRouteCustomFieldsCompletedDelegate == null)) {
                this.onGetRouteCustomFieldsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRouteCustomFieldsCompleted);
            }
            base.InvokeAsync(this.onBeginGetRouteCustomFieldsDelegate, null, this.onEndGetRouteCustomFieldsDelegate, this.onGetRouteCustomFieldsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetArrivalFlightCustomFields(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetArrivalFlightCustomFields(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetArrivalFlightCustomFields(System.IAsyncResult result) {
            return base.Channel.EndGetArrivalFlightCustomFields(result);
        }
        
        private System.IAsyncResult OnBeginGetArrivalFlightCustomFields(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetArrivalFlightCustomFields(callback, asyncState);
        }
        
        private object[] OnEndGetArrivalFlightCustomFields(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetArrivalFlightCustomFields(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetArrivalFlightCustomFieldsCompleted(object state) {
            if ((this.GetArrivalFlightCustomFieldsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetArrivalFlightCustomFieldsCompleted(this, new GetArrivalFlightCustomFieldsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetArrivalFlightCustomFieldsAsync() {
            this.GetArrivalFlightCustomFieldsAsync(null);
        }
        
        public void GetArrivalFlightCustomFieldsAsync(object userState) {
            if ((this.onBeginGetArrivalFlightCustomFieldsDelegate == null)) {
                this.onBeginGetArrivalFlightCustomFieldsDelegate = new BeginOperationDelegate(this.OnBeginGetArrivalFlightCustomFields);
            }
            if ((this.onEndGetArrivalFlightCustomFieldsDelegate == null)) {
                this.onEndGetArrivalFlightCustomFieldsDelegate = new EndOperationDelegate(this.OnEndGetArrivalFlightCustomFields);
            }
            if ((this.onGetArrivalFlightCustomFieldsCompletedDelegate == null)) {
                this.onGetArrivalFlightCustomFieldsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetArrivalFlightCustomFieldsCompleted);
            }
            base.InvokeAsync(this.onBeginGetArrivalFlightCustomFieldsDelegate, null, this.onEndGetArrivalFlightCustomFieldsDelegate, this.onGetArrivalFlightCustomFieldsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetDepartureFlightCustomFields(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDepartureFlightCustomFields(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetDepartureFlightCustomFields(System.IAsyncResult result) {
            return base.Channel.EndGetDepartureFlightCustomFields(result);
        }
        
        private System.IAsyncResult OnBeginGetDepartureFlightCustomFields(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetDepartureFlightCustomFields(callback, asyncState);
        }
        
        private object[] OnEndGetDepartureFlightCustomFields(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetDepartureFlightCustomFields(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDepartureFlightCustomFieldsCompleted(object state) {
            if ((this.GetDepartureFlightCustomFieldsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDepartureFlightCustomFieldsCompleted(this, new GetDepartureFlightCustomFieldsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDepartureFlightCustomFieldsAsync() {
            this.GetDepartureFlightCustomFieldsAsync(null);
        }
        
        public void GetDepartureFlightCustomFieldsAsync(object userState) {
            if ((this.onBeginGetDepartureFlightCustomFieldsDelegate == null)) {
                this.onBeginGetDepartureFlightCustomFieldsDelegate = new BeginOperationDelegate(this.OnBeginGetDepartureFlightCustomFields);
            }
            if ((this.onEndGetDepartureFlightCustomFieldsDelegate == null)) {
                this.onEndGetDepartureFlightCustomFieldsDelegate = new EndOperationDelegate(this.OnEndGetDepartureFlightCustomFields);
            }
            if ((this.onGetDepartureFlightCustomFieldsCompletedDelegate == null)) {
                this.onGetDepartureFlightCustomFieldsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDepartureFlightCustomFieldsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDepartureFlightCustomFieldsDelegate, null, this.onEndGetDepartureFlightCustomFieldsDelegate, this.onGetDepartureFlightCustomFieldsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetMovementCustomFields(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMovementCustomFields(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetMovementCustomFields(System.IAsyncResult result) {
            return base.Channel.EndGetMovementCustomFields(result);
        }
        
        private System.IAsyncResult OnBeginGetMovementCustomFields(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetMovementCustomFields(callback, asyncState);
        }
        
        private object[] OnEndGetMovementCustomFields(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetMovementCustomFields(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMovementCustomFieldsCompleted(object state) {
            if ((this.GetMovementCustomFieldsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMovementCustomFieldsCompleted(this, new GetMovementCustomFieldsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMovementCustomFieldsAsync() {
            this.GetMovementCustomFieldsAsync(null);
        }
        
        public void GetMovementCustomFieldsAsync(object userState) {
            if ((this.onBeginGetMovementCustomFieldsDelegate == null)) {
                this.onBeginGetMovementCustomFieldsDelegate = new BeginOperationDelegate(this.OnBeginGetMovementCustomFields);
            }
            if ((this.onEndGetMovementCustomFieldsDelegate == null)) {
                this.onEndGetMovementCustomFieldsDelegate = new EndOperationDelegate(this.OnEndGetMovementCustomFields);
            }
            if ((this.onGetMovementCustomFieldsCompletedDelegate == null)) {
                this.onGetMovementCustomFieldsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMovementCustomFieldsCompleted);
            }
            base.InvokeAsync(this.onBeginGetMovementCustomFieldsDelegate, null, this.onEndGetMovementCustomFieldsDelegate, this.onGetMovementCustomFieldsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetFlight(App15.ServiceReference2.FlightId flightId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFlight(flightId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetFlight(System.IAsyncResult result) {
            return base.Channel.EndGetFlight(result);
        }
        
        private System.IAsyncResult OnBeginGetFlight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            App15.ServiceReference2.FlightId flightId = ((App15.ServiceReference2.FlightId)(inValues[0]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetFlight(flightId, callback, asyncState);
        }
        
        private object[] OnEndGetFlight(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetFlight(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFlightCompleted(object state) {
            if ((this.GetFlightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFlightCompleted(this, new GetFlightCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFlightAsync(App15.ServiceReference2.FlightId flightId) {
            this.GetFlightAsync(flightId, null);
        }
        
        public void GetFlightAsync(App15.ServiceReference2.FlightId flightId, object userState) {
            if ((this.onBeginGetFlightDelegate == null)) {
                this.onBeginGetFlightDelegate = new BeginOperationDelegate(this.OnBeginGetFlight);
            }
            if ((this.onEndGetFlightDelegate == null)) {
                this.onEndGetFlightDelegate = new EndOperationDelegate(this.OnEndGetFlight);
            }
            if ((this.onGetFlightCompletedDelegate == null)) {
                this.onGetFlightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFlightCompleted);
            }
            base.InvokeAsync(this.onBeginGetFlightDelegate, new object[] {
                        flightId}, this.onEndGetFlightDelegate, this.onGetFlightCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetCommonCheckInAllocationShapes(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCommonCheckInAllocationShapes(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetCommonCheckInAllocationShapes(System.IAsyncResult result) {
            return base.Channel.EndGetCommonCheckInAllocationShapes(result);
        }
        
        private System.IAsyncResult OnBeginGetCommonCheckInAllocationShapes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime from = ((System.DateTime)(inValues[0]));
            System.DateTime to = ((System.DateTime)(inValues[1]));
            string airportCode = ((string)(inValues[2]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[3]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetCommonCheckInAllocationShapes(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetCommonCheckInAllocationShapes(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetCommonCheckInAllocationShapes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCommonCheckInAllocationShapesCompleted(object state) {
            if ((this.GetCommonCheckInAllocationShapesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCommonCheckInAllocationShapesCompleted(this, new GetCommonCheckInAllocationShapesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCommonCheckInAllocationShapesAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetCommonCheckInAllocationShapesAsync(from, to, airportCode, airportIdentifierType, null);
        }
        
        public void GetCommonCheckInAllocationShapesAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetCommonCheckInAllocationShapesDelegate == null)) {
                this.onBeginGetCommonCheckInAllocationShapesDelegate = new BeginOperationDelegate(this.OnBeginGetCommonCheckInAllocationShapes);
            }
            if ((this.onEndGetCommonCheckInAllocationShapesDelegate == null)) {
                this.onEndGetCommonCheckInAllocationShapesDelegate = new EndOperationDelegate(this.OnEndGetCommonCheckInAllocationShapes);
            }
            if ((this.onGetCommonCheckInAllocationShapesCompletedDelegate == null)) {
                this.onGetCommonCheckInAllocationShapesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCommonCheckInAllocationShapesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCommonCheckInAllocationShapesDelegate, new object[] {
                        from,
                        to,
                        airportCode,
                        airportIdentifierType}, this.onEndGetCommonCheckInAllocationShapesDelegate, this.onGetCommonCheckInAllocationShapesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginCreateFlight(App15.ServiceReference2.FlightId flightIdentifier, System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updates, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateFlight(flightIdentifier, updates, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndCreateFlight(System.IAsyncResult result) {
            return base.Channel.EndCreateFlight(result);
        }
        
        private System.IAsyncResult OnBeginCreateFlight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            App15.ServiceReference2.FlightId flightIdentifier = ((App15.ServiceReference2.FlightId)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updates = ((System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue>)(inValues[1]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginCreateFlight(flightIdentifier, updates, callback, asyncState);
        }
        
        private object[] OnEndCreateFlight(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndCreateFlight(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateFlightCompleted(object state) {
            if ((this.CreateFlightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateFlightCompleted(this, new CreateFlightCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateFlightAsync(App15.ServiceReference2.FlightId flightIdentifier, System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updates) {
            this.CreateFlightAsync(flightIdentifier, updates, null);
        }
        
        public void CreateFlightAsync(App15.ServiceReference2.FlightId flightIdentifier, System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updates, object userState) {
            if ((this.onBeginCreateFlightDelegate == null)) {
                this.onBeginCreateFlightDelegate = new BeginOperationDelegate(this.OnBeginCreateFlight);
            }
            if ((this.onEndCreateFlightDelegate == null)) {
                this.onEndCreateFlightDelegate = new EndOperationDelegate(this.OnEndCreateFlight);
            }
            if ((this.onCreateFlightCompletedDelegate == null)) {
                this.onCreateFlightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateFlightCompleted);
            }
            base.InvokeAsync(this.onBeginCreateFlightDelegate, new object[] {
                        flightIdentifier,
                        updates}, this.onEndCreateFlightDelegate, this.onCreateFlightCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginCreateFlightExtended(App15.ServiceReference2.FlightId flightIdentifier, App15.ServiceReference2.FlightUpdateInformation updates, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateFlightExtended(flightIdentifier, updates, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndCreateFlightExtended(System.IAsyncResult result) {
            return base.Channel.EndCreateFlightExtended(result);
        }
        
        private System.IAsyncResult OnBeginCreateFlightExtended(object[] inValues, System.AsyncCallback callback, object asyncState) {
            App15.ServiceReference2.FlightId flightIdentifier = ((App15.ServiceReference2.FlightId)(inValues[0]));
            App15.ServiceReference2.FlightUpdateInformation updates = ((App15.ServiceReference2.FlightUpdateInformation)(inValues[1]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginCreateFlightExtended(flightIdentifier, updates, callback, asyncState);
        }
        
        private object[] OnEndCreateFlightExtended(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndCreateFlightExtended(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateFlightExtendedCompleted(object state) {
            if ((this.CreateFlightExtendedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateFlightExtendedCompleted(this, new CreateFlightExtendedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateFlightExtendedAsync(App15.ServiceReference2.FlightId flightIdentifier, App15.ServiceReference2.FlightUpdateInformation updates) {
            this.CreateFlightExtendedAsync(flightIdentifier, updates, null);
        }
        
        public void CreateFlightExtendedAsync(App15.ServiceReference2.FlightId flightIdentifier, App15.ServiceReference2.FlightUpdateInformation updates, object userState) {
            if ((this.onBeginCreateFlightExtendedDelegate == null)) {
                this.onBeginCreateFlightExtendedDelegate = new BeginOperationDelegate(this.OnBeginCreateFlightExtended);
            }
            if ((this.onEndCreateFlightExtendedDelegate == null)) {
                this.onEndCreateFlightExtendedDelegate = new EndOperationDelegate(this.OnEndCreateFlightExtended);
            }
            if ((this.onCreateFlightExtendedCompletedDelegate == null)) {
                this.onCreateFlightExtendedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateFlightExtendedCompleted);
            }
            base.InvokeAsync(this.onBeginCreateFlightExtendedDelegate, new object[] {
                        flightIdentifier,
                        updates}, this.onEndCreateFlightExtendedDelegate, this.onCreateFlightExtendedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginDeleteFlight(App15.ServiceReference2.FlightId flightIdentifier, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteFlight(flightIdentifier, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndDeleteFlight(System.IAsyncResult result) {
            return base.Channel.EndDeleteFlight(result);
        }
        
        private System.IAsyncResult OnBeginDeleteFlight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            App15.ServiceReference2.FlightId flightIdentifier = ((App15.ServiceReference2.FlightId)(inValues[0]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginDeleteFlight(flightIdentifier, callback, asyncState);
        }
        
        private object[] OnEndDeleteFlight(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndDeleteFlight(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteFlightCompleted(object state) {
            if ((this.DeleteFlightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteFlightCompleted(this, new DeleteFlightCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteFlightAsync(App15.ServiceReference2.FlightId flightIdentifier) {
            this.DeleteFlightAsync(flightIdentifier, null);
        }
        
        public void DeleteFlightAsync(App15.ServiceReference2.FlightId flightIdentifier, object userState) {
            if ((this.onBeginDeleteFlightDelegate == null)) {
                this.onBeginDeleteFlightDelegate = new BeginOperationDelegate(this.OnBeginDeleteFlight);
            }
            if ((this.onEndDeleteFlightDelegate == null)) {
                this.onEndDeleteFlightDelegate = new EndOperationDelegate(this.OnEndDeleteFlight);
            }
            if ((this.onDeleteFlightCompletedDelegate == null)) {
                this.onDeleteFlightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteFlightCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteFlightDelegate, new object[] {
                        flightIdentifier}, this.onEndDeleteFlightDelegate, this.onDeleteFlightCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginUpdateFlight(App15.ServiceReference2.FlightId flightIdentifier, System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updates, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateFlight(flightIdentifier, updates, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndUpdateFlight(System.IAsyncResult result) {
            return base.Channel.EndUpdateFlight(result);
        }
        
        private System.IAsyncResult OnBeginUpdateFlight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            App15.ServiceReference2.FlightId flightIdentifier = ((App15.ServiceReference2.FlightId)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updates = ((System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue>)(inValues[1]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginUpdateFlight(flightIdentifier, updates, callback, asyncState);
        }
        
        private object[] OnEndUpdateFlight(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndUpdateFlight(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateFlightCompleted(object state) {
            if ((this.UpdateFlightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateFlightCompleted(this, new UpdateFlightCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateFlightAsync(App15.ServiceReference2.FlightId flightIdentifier, System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updates) {
            this.UpdateFlightAsync(flightIdentifier, updates, null);
        }
        
        public void UpdateFlightAsync(App15.ServiceReference2.FlightId flightIdentifier, System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updates, object userState) {
            if ((this.onBeginUpdateFlightDelegate == null)) {
                this.onBeginUpdateFlightDelegate = new BeginOperationDelegate(this.OnBeginUpdateFlight);
            }
            if ((this.onEndUpdateFlightDelegate == null)) {
                this.onEndUpdateFlightDelegate = new EndOperationDelegate(this.OnEndUpdateFlight);
            }
            if ((this.onUpdateFlightCompletedDelegate == null)) {
                this.onUpdateFlightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateFlightCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateFlightDelegate, new object[] {
                        flightIdentifier,
                        updates}, this.onEndUpdateFlightDelegate, this.onUpdateFlightCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginUpdateFlightExtended(App15.ServiceReference2.FlightId flightIdentifier, App15.ServiceReference2.FlightUpdateInformation updates, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateFlightExtended(flightIdentifier, updates, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndUpdateFlightExtended(System.IAsyncResult result) {
            return base.Channel.EndUpdateFlightExtended(result);
        }
        
        private System.IAsyncResult OnBeginUpdateFlightExtended(object[] inValues, System.AsyncCallback callback, object asyncState) {
            App15.ServiceReference2.FlightId flightIdentifier = ((App15.ServiceReference2.FlightId)(inValues[0]));
            App15.ServiceReference2.FlightUpdateInformation updates = ((App15.ServiceReference2.FlightUpdateInformation)(inValues[1]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginUpdateFlightExtended(flightIdentifier, updates, callback, asyncState);
        }
        
        private object[] OnEndUpdateFlightExtended(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndUpdateFlightExtended(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateFlightExtendedCompleted(object state) {
            if ((this.UpdateFlightExtendedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateFlightExtendedCompleted(this, new UpdateFlightExtendedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateFlightExtendedAsync(App15.ServiceReference2.FlightId flightIdentifier, App15.ServiceReference2.FlightUpdateInformation updates) {
            this.UpdateFlightExtendedAsync(flightIdentifier, updates, null);
        }
        
        public void UpdateFlightExtendedAsync(App15.ServiceReference2.FlightId flightIdentifier, App15.ServiceReference2.FlightUpdateInformation updates, object userState) {
            if ((this.onBeginUpdateFlightExtendedDelegate == null)) {
                this.onBeginUpdateFlightExtendedDelegate = new BeginOperationDelegate(this.OnBeginUpdateFlightExtended);
            }
            if ((this.onEndUpdateFlightExtendedDelegate == null)) {
                this.onEndUpdateFlightExtendedDelegate = new EndOperationDelegate(this.OnEndUpdateFlightExtended);
            }
            if ((this.onUpdateFlightExtendedCompletedDelegate == null)) {
                this.onUpdateFlightExtendedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateFlightExtendedCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateFlightExtendedDelegate, new object[] {
                        flightIdentifier,
                        updates}, this.onEndUpdateFlightExtendedDelegate, this.onUpdateFlightExtendedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetStandDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStandDowngrades(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetStandDowngrades(System.IAsyncResult result) {
            return base.Channel.EndGetStandDowngrades(result);
        }
        
        private System.IAsyncResult OnBeginGetStandDowngrades(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime from = ((System.DateTime)(inValues[0]));
            System.DateTime to = ((System.DateTime)(inValues[1]));
            string airportCode = ((string)(inValues[2]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[3]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetStandDowngrades(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetStandDowngrades(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetStandDowngrades(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStandDowngradesCompleted(object state) {
            if ((this.GetStandDowngradesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStandDowngradesCompleted(this, new GetStandDowngradesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStandDowngradesAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetStandDowngradesAsync(from, to, airportCode, airportIdentifierType, null);
        }
        
        public void GetStandDowngradesAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetStandDowngradesDelegate == null)) {
                this.onBeginGetStandDowngradesDelegate = new BeginOperationDelegate(this.OnBeginGetStandDowngrades);
            }
            if ((this.onEndGetStandDowngradesDelegate == null)) {
                this.onEndGetStandDowngradesDelegate = new EndOperationDelegate(this.OnEndGetStandDowngrades);
            }
            if ((this.onGetStandDowngradesCompletedDelegate == null)) {
                this.onGetStandDowngradesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStandDowngradesCompleted);
            }
            base.InvokeAsync(this.onBeginGetStandDowngradesDelegate, new object[] {
                        from,
                        to,
                        airportCode,
                        airportIdentifierType}, this.onEndGetStandDowngradesDelegate, this.onGetStandDowngradesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetGateDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGateDowngrades(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetGateDowngrades(System.IAsyncResult result) {
            return base.Channel.EndGetGateDowngrades(result);
        }
        
        private System.IAsyncResult OnBeginGetGateDowngrades(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime from = ((System.DateTime)(inValues[0]));
            System.DateTime to = ((System.DateTime)(inValues[1]));
            string airportCode = ((string)(inValues[2]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[3]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetGateDowngrades(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetGateDowngrades(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetGateDowngrades(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGateDowngradesCompleted(object state) {
            if ((this.GetGateDowngradesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGateDowngradesCompleted(this, new GetGateDowngradesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGateDowngradesAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetGateDowngradesAsync(from, to, airportCode, airportIdentifierType, null);
        }
        
        public void GetGateDowngradesAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetGateDowngradesDelegate == null)) {
                this.onBeginGetGateDowngradesDelegate = new BeginOperationDelegate(this.OnBeginGetGateDowngrades);
            }
            if ((this.onEndGetGateDowngradesDelegate == null)) {
                this.onEndGetGateDowngradesDelegate = new EndOperationDelegate(this.OnEndGetGateDowngrades);
            }
            if ((this.onGetGateDowngradesCompletedDelegate == null)) {
                this.onGetGateDowngradesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGateDowngradesCompleted);
            }
            base.InvokeAsync(this.onBeginGetGateDowngradesDelegate, new object[] {
                        from,
                        to,
                        airportCode,
                        airportIdentifierType}, this.onEndGetGateDowngradesDelegate, this.onGetGateDowngradesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetChuteDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetChuteDowngrades(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetChuteDowngrades(System.IAsyncResult result) {
            return base.Channel.EndGetChuteDowngrades(result);
        }
        
        private System.IAsyncResult OnBeginGetChuteDowngrades(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime from = ((System.DateTime)(inValues[0]));
            System.DateTime to = ((System.DateTime)(inValues[1]));
            string airportCode = ((string)(inValues[2]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[3]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetChuteDowngrades(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetChuteDowngrades(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetChuteDowngrades(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetChuteDowngradesCompleted(object state) {
            if ((this.GetChuteDowngradesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetChuteDowngradesCompleted(this, new GetChuteDowngradesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetChuteDowngradesAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetChuteDowngradesAsync(from, to, airportCode, airportIdentifierType, null);
        }
        
        public void GetChuteDowngradesAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetChuteDowngradesDelegate == null)) {
                this.onBeginGetChuteDowngradesDelegate = new BeginOperationDelegate(this.OnBeginGetChuteDowngrades);
            }
            if ((this.onEndGetChuteDowngradesDelegate == null)) {
                this.onEndGetChuteDowngradesDelegate = new EndOperationDelegate(this.OnEndGetChuteDowngrades);
            }
            if ((this.onGetChuteDowngradesCompletedDelegate == null)) {
                this.onGetChuteDowngradesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetChuteDowngradesCompleted);
            }
            base.InvokeAsync(this.onBeginGetChuteDowngradesDelegate, new object[] {
                        from,
                        to,
                        airportCode,
                        airportIdentifierType}, this.onEndGetChuteDowngradesDelegate, this.onGetChuteDowngradesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetCheckInDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCheckInDowngrades(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetCheckInDowngrades(System.IAsyncResult result) {
            return base.Channel.EndGetCheckInDowngrades(result);
        }
        
        private System.IAsyncResult OnBeginGetCheckInDowngrades(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime from = ((System.DateTime)(inValues[0]));
            System.DateTime to = ((System.DateTime)(inValues[1]));
            string airportCode = ((string)(inValues[2]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[3]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetCheckInDowngrades(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetCheckInDowngrades(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetCheckInDowngrades(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCheckInDowngradesCompleted(object state) {
            if ((this.GetCheckInDowngradesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCheckInDowngradesCompleted(this, new GetCheckInDowngradesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCheckInDowngradesAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetCheckInDowngradesAsync(from, to, airportCode, airportIdentifierType, null);
        }
        
        public void GetCheckInDowngradesAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetCheckInDowngradesDelegate == null)) {
                this.onBeginGetCheckInDowngradesDelegate = new BeginOperationDelegate(this.OnBeginGetCheckInDowngrades);
            }
            if ((this.onEndGetCheckInDowngradesDelegate == null)) {
                this.onEndGetCheckInDowngradesDelegate = new EndOperationDelegate(this.OnEndGetCheckInDowngrades);
            }
            if ((this.onGetCheckInDowngradesCompletedDelegate == null)) {
                this.onGetCheckInDowngradesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCheckInDowngradesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCheckInDowngradesDelegate, new object[] {
                        from,
                        to,
                        airportCode,
                        airportIdentifierType}, this.onEndGetCheckInDowngradesDelegate, this.onGetCheckInDowngradesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetLoungeDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLoungeDowngrades(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetLoungeDowngrades(System.IAsyncResult result) {
            return base.Channel.EndGetLoungeDowngrades(result);
        }
        
        private System.IAsyncResult OnBeginGetLoungeDowngrades(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime from = ((System.DateTime)(inValues[0]));
            System.DateTime to = ((System.DateTime)(inValues[1]));
            string airportCode = ((string)(inValues[2]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[3]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetLoungeDowngrades(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetLoungeDowngrades(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetLoungeDowngrades(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLoungeDowngradesCompleted(object state) {
            if ((this.GetLoungeDowngradesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLoungeDowngradesCompleted(this, new GetLoungeDowngradesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLoungeDowngradesAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetLoungeDowngradesAsync(from, to, airportCode, airportIdentifierType, null);
        }
        
        public void GetLoungeDowngradesAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetLoungeDowngradesDelegate == null)) {
                this.onBeginGetLoungeDowngradesDelegate = new BeginOperationDelegate(this.OnBeginGetLoungeDowngrades);
            }
            if ((this.onEndGetLoungeDowngradesDelegate == null)) {
                this.onEndGetLoungeDowngradesDelegate = new EndOperationDelegate(this.OnEndGetLoungeDowngrades);
            }
            if ((this.onGetLoungeDowngradesCompletedDelegate == null)) {
                this.onGetLoungeDowngradesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLoungeDowngradesCompleted);
            }
            base.InvokeAsync(this.onBeginGetLoungeDowngradesDelegate, new object[] {
                        from,
                        to,
                        airportCode,
                        airportIdentifierType}, this.onEndGetLoungeDowngradesDelegate, this.onGetLoungeDowngradesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetCarouselDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCarouselDowngrades(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetCarouselDowngrades(System.IAsyncResult result) {
            return base.Channel.EndGetCarouselDowngrades(result);
        }
        
        private System.IAsyncResult OnBeginGetCarouselDowngrades(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime from = ((System.DateTime)(inValues[0]));
            System.DateTime to = ((System.DateTime)(inValues[1]));
            string airportCode = ((string)(inValues[2]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[3]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetCarouselDowngrades(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetCarouselDowngrades(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetCarouselDowngrades(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCarouselDowngradesCompleted(object state) {
            if ((this.GetCarouselDowngradesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCarouselDowngradesCompleted(this, new GetCarouselDowngradesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCarouselDowngradesAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetCarouselDowngradesAsync(from, to, airportCode, airportIdentifierType, null);
        }
        
        public void GetCarouselDowngradesAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetCarouselDowngradesDelegate == null)) {
                this.onBeginGetCarouselDowngradesDelegate = new BeginOperationDelegate(this.OnBeginGetCarouselDowngrades);
            }
            if ((this.onEndGetCarouselDowngradesDelegate == null)) {
                this.onEndGetCarouselDowngradesDelegate = new EndOperationDelegate(this.OnEndGetCarouselDowngrades);
            }
            if ((this.onGetCarouselDowngradesCompletedDelegate == null)) {
                this.onGetCarouselDowngradesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCarouselDowngradesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCarouselDowngradesDelegate, new object[] {
                        from,
                        to,
                        airportCode,
                        airportIdentifierType}, this.onEndGetCarouselDowngradesDelegate, this.onGetCarouselDowngradesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetSlotRequests(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlotRequests(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetSlotRequests(System.IAsyncResult result) {
            return base.Channel.EndGetSlotRequests(result);
        }
        
        private System.IAsyncResult OnBeginGetSlotRequests(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime from = ((System.DateTime)(inValues[0]));
            System.DateTime to = ((System.DateTime)(inValues[1]));
            string airportCode = ((string)(inValues[2]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[3]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetSlotRequests(from, to, airportCode, airportIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetSlotRequests(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetSlotRequests(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlotRequestsCompleted(object state) {
            if ((this.GetSlotRequestsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlotRequestsCompleted(this, new GetSlotRequestsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlotRequestsAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType) {
            this.GetSlotRequestsAsync(from, to, airportCode, airportIdentifierType, null);
        }
        
        public void GetSlotRequestsAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, object userState) {
            if ((this.onBeginGetSlotRequestsDelegate == null)) {
                this.onBeginGetSlotRequestsDelegate = new BeginOperationDelegate(this.OnBeginGetSlotRequests);
            }
            if ((this.onEndGetSlotRequestsDelegate == null)) {
                this.onEndGetSlotRequestsDelegate = new EndOperationDelegate(this.OnEndGetSlotRequests);
            }
            if ((this.onGetSlotRequestsCompletedDelegate == null)) {
                this.onGetSlotRequestsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlotRequestsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlotRequestsDelegate, new object[] {
                        from,
                        to,
                        airportCode,
                        airportIdentifierType}, this.onEndGetSlotRequestsDelegate, this.onGetSlotRequestsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetSlotRequestsForAirline(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, string airlineCode, App15.ServiceReference2.CodeContext airlineIdentifierType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlotRequestsForAirline(from, to, airportCode, airportIdentifierType, airlineCode, airlineIdentifierType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetSlotRequestsForAirline(System.IAsyncResult result) {
            return base.Channel.EndGetSlotRequestsForAirline(result);
        }
        
        private System.IAsyncResult OnBeginGetSlotRequestsForAirline(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime from = ((System.DateTime)(inValues[0]));
            System.DateTime to = ((System.DateTime)(inValues[1]));
            string airportCode = ((string)(inValues[2]));
            App15.ServiceReference2.AirportIdentifierType airportIdentifierType = ((App15.ServiceReference2.AirportIdentifierType)(inValues[3]));
            string airlineCode = ((string)(inValues[4]));
            App15.ServiceReference2.CodeContext airlineIdentifierType = ((App15.ServiceReference2.CodeContext)(inValues[5]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetSlotRequestsForAirline(from, to, airportCode, airportIdentifierType, airlineCode, airlineIdentifierType, callback, asyncState);
        }
        
        private object[] OnEndGetSlotRequestsForAirline(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetSlotRequestsForAirline(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlotRequestsForAirlineCompleted(object state) {
            if ((this.GetSlotRequestsForAirlineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlotRequestsForAirlineCompleted(this, new GetSlotRequestsForAirlineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlotRequestsForAirlineAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, string airlineCode, App15.ServiceReference2.CodeContext airlineIdentifierType) {
            this.GetSlotRequestsForAirlineAsync(from, to, airportCode, airportIdentifierType, airlineCode, airlineIdentifierType, null);
        }
        
        public void GetSlotRequestsForAirlineAsync(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, string airlineCode, App15.ServiceReference2.CodeContext airlineIdentifierType, object userState) {
            if ((this.onBeginGetSlotRequestsForAirlineDelegate == null)) {
                this.onBeginGetSlotRequestsForAirlineDelegate = new BeginOperationDelegate(this.OnBeginGetSlotRequestsForAirline);
            }
            if ((this.onEndGetSlotRequestsForAirlineDelegate == null)) {
                this.onEndGetSlotRequestsForAirlineDelegate = new EndOperationDelegate(this.OnEndGetSlotRequestsForAirline);
            }
            if ((this.onGetSlotRequestsForAirlineCompletedDelegate == null)) {
                this.onGetSlotRequestsForAirlineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlotRequestsForAirlineCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlotRequestsForAirlineDelegate, new object[] {
                        from,
                        to,
                        airportCode,
                        airportIdentifierType,
                        airlineCode,
                        airlineIdentifierType}, this.onEndGetSlotRequestsForAirlineDelegate, this.onGetSlotRequestsForAirlineCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginCreateSlotRequest(System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> values, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateSlotRequest(values, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndCreateSlotRequest(System.IAsyncResult result) {
            return base.Channel.EndCreateSlotRequest(result);
        }
        
        private System.IAsyncResult OnBeginCreateSlotRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> values = ((System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue>)(inValues[0]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginCreateSlotRequest(values, callback, asyncState);
        }
        
        private object[] OnEndCreateSlotRequest(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndCreateSlotRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateSlotRequestCompleted(object state) {
            if ((this.CreateSlotRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateSlotRequestCompleted(this, new CreateSlotRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateSlotRequestAsync(System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> values) {
            this.CreateSlotRequestAsync(values, null);
        }
        
        public void CreateSlotRequestAsync(System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> values, object userState) {
            if ((this.onBeginCreateSlotRequestDelegate == null)) {
                this.onBeginCreateSlotRequestDelegate = new BeginOperationDelegate(this.OnBeginCreateSlotRequest);
            }
            if ((this.onEndCreateSlotRequestDelegate == null)) {
                this.onEndCreateSlotRequestDelegate = new EndOperationDelegate(this.OnEndCreateSlotRequest);
            }
            if ((this.onCreateSlotRequestCompletedDelegate == null)) {
                this.onCreateSlotRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateSlotRequestCompleted);
            }
            base.InvokeAsync(this.onBeginCreateSlotRequestDelegate, new object[] {
                        values}, this.onEndCreateSlotRequestDelegate, this.onCreateSlotRequestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginUpdateSlotRequest(App15.ServiceReference2.SlotRequestIdentifier slotRequestId, System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> values, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSlotRequest(slotRequestId, values, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndUpdateSlotRequest(System.IAsyncResult result) {
            return base.Channel.EndUpdateSlotRequest(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSlotRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            App15.ServiceReference2.SlotRequestIdentifier slotRequestId = ((App15.ServiceReference2.SlotRequestIdentifier)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> values = ((System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue>)(inValues[1]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginUpdateSlotRequest(slotRequestId, values, callback, asyncState);
        }
        
        private object[] OnEndUpdateSlotRequest(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndUpdateSlotRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateSlotRequestCompleted(object state) {
            if ((this.UpdateSlotRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSlotRequestCompleted(this, new UpdateSlotRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSlotRequestAsync(App15.ServiceReference2.SlotRequestIdentifier slotRequestId, System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> values) {
            this.UpdateSlotRequestAsync(slotRequestId, values, null);
        }
        
        public void UpdateSlotRequestAsync(App15.ServiceReference2.SlotRequestIdentifier slotRequestId, System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> values, object userState) {
            if ((this.onBeginUpdateSlotRequestDelegate == null)) {
                this.onBeginUpdateSlotRequestDelegate = new BeginOperationDelegate(this.OnBeginUpdateSlotRequest);
            }
            if ((this.onEndUpdateSlotRequestDelegate == null)) {
                this.onEndUpdateSlotRequestDelegate = new EndOperationDelegate(this.OnEndUpdateSlotRequest);
            }
            if ((this.onUpdateSlotRequestCompletedDelegate == null)) {
                this.onUpdateSlotRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSlotRequestCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSlotRequestDelegate, new object[] {
                        slotRequestId,
                        values}, this.onEndUpdateSlotRequestDelegate, this.onUpdateSlotRequestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginDeleteSlotRequest(App15.ServiceReference2.SlotRequestIdentifier slotRequestId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteSlotRequest(slotRequestId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndDeleteSlotRequest(System.IAsyncResult result) {
            return base.Channel.EndDeleteSlotRequest(result);
        }
        
        private System.IAsyncResult OnBeginDeleteSlotRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            App15.ServiceReference2.SlotRequestIdentifier slotRequestId = ((App15.ServiceReference2.SlotRequestIdentifier)(inValues[0]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginDeleteSlotRequest(slotRequestId, callback, asyncState);
        }
        
        private object[] OnEndDeleteSlotRequest(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndDeleteSlotRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteSlotRequestCompleted(object state) {
            if ((this.DeleteSlotRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteSlotRequestCompleted(this, new DeleteSlotRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteSlotRequestAsync(App15.ServiceReference2.SlotRequestIdentifier slotRequestId) {
            this.DeleteSlotRequestAsync(slotRequestId, null);
        }
        
        public void DeleteSlotRequestAsync(App15.ServiceReference2.SlotRequestIdentifier slotRequestId, object userState) {
            if ((this.onBeginDeleteSlotRequestDelegate == null)) {
                this.onBeginDeleteSlotRequestDelegate = new BeginOperationDelegate(this.OnBeginDeleteSlotRequest);
            }
            if ((this.onEndDeleteSlotRequestDelegate == null)) {
                this.onEndDeleteSlotRequestDelegate = new EndOperationDelegate(this.OnEndDeleteSlotRequest);
            }
            if ((this.onDeleteSlotRequestCompletedDelegate == null)) {
                this.onDeleteSlotRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteSlotRequestCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteSlotRequestDelegate, new object[] {
                        slotRequestId}, this.onEndDeleteSlotRequestDelegate, this.onDeleteSlotRequestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginUpdateSlotRequestStatus(App15.ServiceReference2.SlotRequestIdentifier slotRequestId, string slotRequestStatus, string comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSlotRequestStatus(slotRequestId, slotRequestStatus, comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndUpdateSlotRequestStatus(System.IAsyncResult result) {
            return base.Channel.EndUpdateSlotRequestStatus(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSlotRequestStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            App15.ServiceReference2.SlotRequestIdentifier slotRequestId = ((App15.ServiceReference2.SlotRequestIdentifier)(inValues[0]));
            string slotRequestStatus = ((string)(inValues[1]));
            string comment = ((string)(inValues[2]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginUpdateSlotRequestStatus(slotRequestId, slotRequestStatus, comment, callback, asyncState);
        }
        
        private object[] OnEndUpdateSlotRequestStatus(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndUpdateSlotRequestStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateSlotRequestStatusCompleted(object state) {
            if ((this.UpdateSlotRequestStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSlotRequestStatusCompleted(this, new UpdateSlotRequestStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSlotRequestStatusAsync(App15.ServiceReference2.SlotRequestIdentifier slotRequestId, string slotRequestStatus, string comment) {
            this.UpdateSlotRequestStatusAsync(slotRequestId, slotRequestStatus, comment, null);
        }
        
        public void UpdateSlotRequestStatusAsync(App15.ServiceReference2.SlotRequestIdentifier slotRequestId, string slotRequestStatus, string comment, object userState) {
            if ((this.onBeginUpdateSlotRequestStatusDelegate == null)) {
                this.onBeginUpdateSlotRequestStatusDelegate = new BeginOperationDelegate(this.OnBeginUpdateSlotRequestStatus);
            }
            if ((this.onEndUpdateSlotRequestStatusDelegate == null)) {
                this.onEndUpdateSlotRequestStatusDelegate = new EndOperationDelegate(this.OnEndUpdateSlotRequestStatus);
            }
            if ((this.onUpdateSlotRequestStatusCompletedDelegate == null)) {
                this.onUpdateSlotRequestStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSlotRequestStatusCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSlotRequestStatusDelegate, new object[] {
                        slotRequestId,
                        slotRequestStatus,
                        comment}, this.onEndUpdateSlotRequestStatusDelegate, this.onUpdateSlotRequestStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult App15.ServiceReference2.IAMSIntegrationService.BeginGetSlotRequestStatusHistory(App15.ServiceReference2.SlotRequestIdentifier slotRequestIdentifier, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlotRequestStatusHistory(slotRequestIdentifier, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Xml.Linq.XElement App15.ServiceReference2.IAMSIntegrationService.EndGetSlotRequestStatusHistory(System.IAsyncResult result) {
            return base.Channel.EndGetSlotRequestStatusHistory(result);
        }
        
        private System.IAsyncResult OnBeginGetSlotRequestStatusHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            App15.ServiceReference2.SlotRequestIdentifier slotRequestIdentifier = ((App15.ServiceReference2.SlotRequestIdentifier)(inValues[0]));
            return ((App15.ServiceReference2.IAMSIntegrationService)(this)).BeginGetSlotRequestStatusHistory(slotRequestIdentifier, callback, asyncState);
        }
        
        private object[] OnEndGetSlotRequestStatusHistory(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = ((App15.ServiceReference2.IAMSIntegrationService)(this)).EndGetSlotRequestStatusHistory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlotRequestStatusHistoryCompleted(object state) {
            if ((this.GetSlotRequestStatusHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlotRequestStatusHistoryCompleted(this, new GetSlotRequestStatusHistoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlotRequestStatusHistoryAsync(App15.ServiceReference2.SlotRequestIdentifier slotRequestIdentifier) {
            this.GetSlotRequestStatusHistoryAsync(slotRequestIdentifier, null);
        }
        
        public void GetSlotRequestStatusHistoryAsync(App15.ServiceReference2.SlotRequestIdentifier slotRequestIdentifier, object userState) {
            if ((this.onBeginGetSlotRequestStatusHistoryDelegate == null)) {
                this.onBeginGetSlotRequestStatusHistoryDelegate = new BeginOperationDelegate(this.OnBeginGetSlotRequestStatusHistory);
            }
            if ((this.onEndGetSlotRequestStatusHistoryDelegate == null)) {
                this.onEndGetSlotRequestStatusHistoryDelegate = new EndOperationDelegate(this.OnEndGetSlotRequestStatusHistory);
            }
            if ((this.onGetSlotRequestStatusHistoryCompletedDelegate == null)) {
                this.onGetSlotRequestStatusHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlotRequestStatusHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlotRequestStatusHistoryDelegate, new object[] {
                        slotRequestIdentifier}, this.onEndGetSlotRequestStatusHistoryDelegate, this.onGetSlotRequestStatusHistoryCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override App15.ServiceReference2.IAMSIntegrationService CreateChannel() {
            return new AMSIntegrationServiceClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IAMSIntegrationService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IAMSIntegrationService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost/SITAAMSIntegrationService/v1/SITAAMSIntegrationService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return AMSIntegrationServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IAMSIntegrationService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return AMSIntegrationServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IAMSIntegrationService);
        }
        
        private class AMSIntegrationServiceClientChannel : ChannelBase<App15.ServiceReference2.IAMSIntegrationService>, App15.ServiceReference2.IAMSIntegrationService {
            
            public AMSIntegrationServiceClientChannel(System.ServiceModel.ClientBase<App15.ServiceReference2.IAMSIntegrationService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetFlights(System.DateTime from, System.DateTime to, string airport, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = from;
                _args[1] = to;
                _args[2] = airport;
                _args[3] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetFlights", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetFlights(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetFlights", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMovementsOverlappingWithPeriod(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = from;
                _args[1] = to;
                _args[2] = airportCode;
                _args[3] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetMovementsOverlappingWithPeriod", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetMovementsOverlappingWithPeriod(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetMovementsOverlappingWithPeriod", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAirports(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAirports", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetAirports(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetAirports", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAircraft(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAircraft", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetAircraft(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetAircraft", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAircraftTypes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAircraftTypes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetAircraftTypes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetAircraftTypes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAirlines(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAirlines", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetAirlines(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetAirlines", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomsTypes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCustomsTypes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetCustomsTypes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetCustomsTypes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRoutes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetRoutes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetRoutes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetRoutes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAreas(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = airportCode;
                _args[1] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetAreas", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetAreas(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetAreas", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStands(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = airportCode;
                _args[1] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetStands", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetStands(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetStands", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCarousels(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = airportCode;
                _args[1] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetCarousels", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetCarousels(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetCarousels", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCheckIns(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = airportCode;
                _args[1] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetCheckIns", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetCheckIns(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetCheckIns", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetChutes(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = airportCode;
                _args[1] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetChutes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetChutes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetChutes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGates(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = airportCode;
                _args[1] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetGates", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetGates(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetGates", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLounges(string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = airportCode;
                _args[1] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetLounges", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetLounges(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetLounges", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAircraftCustomFields(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAircraftCustomFields", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetAircraftCustomFields(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetAircraftCustomFields", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAircraftTypeCustomFields(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAircraftTypeCustomFields", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetAircraftTypeCustomFields(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetAircraftTypeCustomFields", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAirlineCustomFields(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAirlineCustomFields", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetAirlineCustomFields(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetAirlineCustomFields", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAirportCustomFields(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAirportCustomFields", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetAirportCustomFields(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetAirportCustomFields", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRouteCustomFields(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetRouteCustomFields", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetRouteCustomFields(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetRouteCustomFields", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetArrivalFlightCustomFields(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetArrivalFlightCustomFields", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetArrivalFlightCustomFields(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetArrivalFlightCustomFields", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDepartureFlightCustomFields(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDepartureFlightCustomFields", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetDepartureFlightCustomFields(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetDepartureFlightCustomFields", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMovementCustomFields(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMovementCustomFields", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetMovementCustomFields(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetMovementCustomFields", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFlight(App15.ServiceReference2.FlightId flightId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = flightId;
                System.IAsyncResult _result = base.BeginInvoke("GetFlight", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetFlight(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetFlight", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCommonCheckInAllocationShapes(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = from;
                _args[1] = to;
                _args[2] = airportCode;
                _args[3] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetCommonCheckInAllocationShapes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetCommonCheckInAllocationShapes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetCommonCheckInAllocationShapes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateFlight(App15.ServiceReference2.FlightId flightIdentifier, System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updates, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = flightIdentifier;
                _args[1] = updates;
                System.IAsyncResult _result = base.BeginInvoke("CreateFlight", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndCreateFlight(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("CreateFlight", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateFlightExtended(App15.ServiceReference2.FlightId flightIdentifier, App15.ServiceReference2.FlightUpdateInformation updates, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = flightIdentifier;
                _args[1] = updates;
                System.IAsyncResult _result = base.BeginInvoke("CreateFlightExtended", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndCreateFlightExtended(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("CreateFlightExtended", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteFlight(App15.ServiceReference2.FlightId flightIdentifier, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = flightIdentifier;
                System.IAsyncResult _result = base.BeginInvoke("DeleteFlight", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndDeleteFlight(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("DeleteFlight", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateFlight(App15.ServiceReference2.FlightId flightIdentifier, System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> updates, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = flightIdentifier;
                _args[1] = updates;
                System.IAsyncResult _result = base.BeginInvoke("UpdateFlight", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndUpdateFlight(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("UpdateFlight", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateFlightExtended(App15.ServiceReference2.FlightId flightIdentifier, App15.ServiceReference2.FlightUpdateInformation updates, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = flightIdentifier;
                _args[1] = updates;
                System.IAsyncResult _result = base.BeginInvoke("UpdateFlightExtended", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndUpdateFlightExtended(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("UpdateFlightExtended", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStandDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = from;
                _args[1] = to;
                _args[2] = airportCode;
                _args[3] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetStandDowngrades", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetStandDowngrades(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetStandDowngrades", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGateDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = from;
                _args[1] = to;
                _args[2] = airportCode;
                _args[3] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetGateDowngrades", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetGateDowngrades(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetGateDowngrades", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetChuteDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = from;
                _args[1] = to;
                _args[2] = airportCode;
                _args[3] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetChuteDowngrades", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetChuteDowngrades(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetChuteDowngrades", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCheckInDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = from;
                _args[1] = to;
                _args[2] = airportCode;
                _args[3] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetCheckInDowngrades", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetCheckInDowngrades(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetCheckInDowngrades", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLoungeDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = from;
                _args[1] = to;
                _args[2] = airportCode;
                _args[3] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetLoungeDowngrades", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetLoungeDowngrades(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetLoungeDowngrades", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCarouselDowngrades(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = from;
                _args[1] = to;
                _args[2] = airportCode;
                _args[3] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetCarouselDowngrades", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetCarouselDowngrades(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetCarouselDowngrades", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSlotRequests(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = from;
                _args[1] = to;
                _args[2] = airportCode;
                _args[3] = airportIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetSlotRequests", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetSlotRequests(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetSlotRequests", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSlotRequestsForAirline(System.DateTime from, System.DateTime to, string airportCode, App15.ServiceReference2.AirportIdentifierType airportIdentifierType, string airlineCode, App15.ServiceReference2.CodeContext airlineIdentifierType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = from;
                _args[1] = to;
                _args[2] = airportCode;
                _args[3] = airportIdentifierType;
                _args[4] = airlineCode;
                _args[5] = airlineIdentifierType;
                System.IAsyncResult _result = base.BeginInvoke("GetSlotRequestsForAirline", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetSlotRequestsForAirline(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetSlotRequestsForAirline", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateSlotRequest(System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> values, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = values;
                System.IAsyncResult _result = base.BeginInvoke("CreateSlotRequest", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndCreateSlotRequest(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("CreateSlotRequest", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateSlotRequest(App15.ServiceReference2.SlotRequestIdentifier slotRequestId, System.Collections.ObjectModel.ObservableCollection<App15.ServiceReference2.PropertyValue> values, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = slotRequestId;
                _args[1] = values;
                System.IAsyncResult _result = base.BeginInvoke("UpdateSlotRequest", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndUpdateSlotRequest(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("UpdateSlotRequest", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteSlotRequest(App15.ServiceReference2.SlotRequestIdentifier slotRequestId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = slotRequestId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteSlotRequest", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndDeleteSlotRequest(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("DeleteSlotRequest", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateSlotRequestStatus(App15.ServiceReference2.SlotRequestIdentifier slotRequestId, string slotRequestStatus, string comment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = slotRequestId;
                _args[1] = slotRequestStatus;
                _args[2] = comment;
                System.IAsyncResult _result = base.BeginInvoke("UpdateSlotRequestStatus", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndUpdateSlotRequestStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("UpdateSlotRequestStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSlotRequestStatusHistory(App15.ServiceReference2.SlotRequestIdentifier slotRequestIdentifier, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = slotRequestIdentifier;
                System.IAsyncResult _result = base.BeginInvoke("GetSlotRequestStatusHistory", _args, callback, asyncState);
                return _result;
            }
            
            public System.Xml.Linq.XElement EndGetSlotRequestStatusHistory(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Xml.Linq.XElement _result = ((System.Xml.Linq.XElement)(base.EndInvoke("GetSlotRequestStatusHistory", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IAMSIntegrationService,
        }
    }
}
